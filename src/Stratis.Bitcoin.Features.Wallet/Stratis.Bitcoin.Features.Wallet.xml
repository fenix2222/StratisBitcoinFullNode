<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Stratis.Bitcoin.Features.Wallet</name>
    </assembly>
    <members>
        <member name="T:Stratis.Bitcoin.Features.Wallet.AccountBalance">
            <summary>
            A class that represents the balance of an account.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AccountBalance.Account">
            <summary>
            The account for which the balance is calculated.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AccountBalance.AmountConfirmed">
            <summary>
            The balance of confirmed transactions.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AccountBalance.AmountUnconfirmed">
            <summary>
            The balance of unconfirmed transactions.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AccountBalance.SpendableAmount">
            <summary>
            The amount that has enough confirmations to be already spendable.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.AddressBalance">
            <summary>
            A class that represents the balance of an address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AddressBalance.Address">
            <summary>
            The address for which the balance is calculated.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AddressBalance.CoinType">
            <summary>
            The coin type of this balance.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AddressBalance.AmountConfirmed">
            <summary>
            The balance of confirmed transactions.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AddressBalance.AmountUnconfirmed">
            <summary>
            The balance of unconfirmed transactions.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AddressBalance.SpendableAmount">
            <summary>
            The amount that has enough confirmations to be already spendable.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.AddressBook">
            <summary>
            Represents an address book.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.AddressBook.#ctor">
            <summary>
            Initializes a new instance of the wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AddressBook.Addresses">
            <summary>
            The list of addresses in the address book.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.AddressBookEntry">
            <summary>
            Represents an entry in the address book.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AddressBookEntry.Label">
            <summary>
            A label uniquely identifying an entry.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AddressBookEntry.Address">
            <summary>
            An address in base58.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.AddressBookException">
            <summary>
            An exception thrown by operations on the address book.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.AddressBookManager.AddressBookFileName">
            <summary>File extension for wallet files.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.AddressBookManager.logger">
            <summary>Instance logger.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.AddressBookManager.fileStorage">
            <summary>An object capable of storing <see cref="T:Stratis.Bitcoin.Features.Wallet.Wallet"/>s to the file system.</summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.AddressBookManager.Initialize">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.AddressBookManager.AddNewAddress(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.AddressBookManager.GetAddressBook">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.AddressBookManager.RemoveAddress(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.ScriptToAddressLookup">
            <summary>
            This class is used to identify a <see cref="T:Stratis.Bitcoin.Features.Wallet.HdAddress" /> given a <see cref="T:NBitcoin.Script" /> (scriptPubKey).
            </summary>
            <remarks>
            Being able to map scripts to addresses allows the wallet to identify the corresponding transactions (see
            <see cref="P:Stratis.Bitcoin.Features.Wallet.HdAddress.Transactions" />) that pay to those addresses regardless of the type of script being used.
            The methods are virtual so that the functionality can be overridden as required to support additional script types.
            </remarks>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.ScriptToAddressLookup.keysLookup">
            <summary>A collection of <see cref="T:Stratis.Bitcoin.Features.Wallet.HdAddress"/> objects eached keyed by a <see cref="T:NBitcoin.Script"/> object.</summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.ScriptToAddressLookup.#ctor">
            <summary>
            Constructs this object.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.ScriptToAddressLookup.Values">
            <summary>
            Returns the <see cref="T:Stratis.Bitcoin.Features.Wallet.HdAddress"/> values from the <see cref="F:Stratis.Bitcoin.Features.Wallet.ScriptToAddressLookup.keysLookup"/> collection.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.ScriptToAddressLookup.TryGetValue(NBitcoin.Script,Stratis.Bitcoin.Features.Wallet.HdAddress@)">
            <summary>
            Maps scripts to addresses.
            </summary>
            <param name="script">The script to map.</param>
            <param name="address">The address mapped to the script.</param>
            <returns>Return <c>true</c> if a mapping could be found and <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.ScriptToAddressLookup.Count">
            <summary>
            Returns the number of elements in the collection.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.ScriptToAddressLookup.Item(NBitcoin.Script)">
            <summary>
            The 'get' method returns the address that has been mapped to the script.
            The 'set' method records the address against the script as key.
            </summary>
            <param name="script">The script that acts as key.</param>
            <returns>The <see cref="T:Stratis.Bitcoin.Features.Wallet.HdAddress"/> object.</returns>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Broadcasting.BroadcasterBehavior.logger">
            <summary>Instance logger for the memory pool component.</summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Broadcasting.BroadcasterBehavior.Clone">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Broadcasting.BroadcasterBehavior.OnMessageReceivedAsync(Stratis.Bitcoin.P2P.Peer.INetworkPeer,Stratis.Bitcoin.P2P.Protocol.IncomingMessage)">
            <summary>
            Handler for processing incoming message from the peer.
            </summary>
            <param name="peer">Peer sending the message.</param>
            <param name="message">Incoming message.</param>
            <remarks>
            TODO: Fix the exception handling of the async event.
            </remarks>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Broadcasting.BroadcasterBehavior.ProcessMessageAsync(Stratis.Bitcoin.P2P.Peer.INetworkPeer,Stratis.Bitcoin.P2P.Protocol.IncomingMessage)">
            <summary>
            Handler for processing peer messages.
            Handles the following message payloads: TxPayload, MempoolPayload, GetDataPayload, InvPayload.
            </summary>
            <param name="peer">Peer sending the message.</param>
            <param name="message">Incoming message.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Broadcasting.BroadcasterBehavior.AttachCore">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Broadcasting.BroadcasterBehavior.DetachCore">
            <inheritdoc />
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Broadcasting.BroadcasterManagerBase.connectionManager">
            <summary> Connection manager for managing node connections.</summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Broadcasting.BroadcasterManagerBase.PropagateTransactionToPeersAsync(NBitcoin.Transaction,System.Collections.Generic.List{Stratis.Bitcoin.P2P.Peer.INetworkPeer})">
            <summary>
            Sends transaction to peers.
            </summary>
            <param name="transaction">Transaction that will be propagated.</param>
            <param name="peers">Peers to whom we will propagate the transaction.</param>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Broadcasting.FullNodeBroadcasterManager.mempoolValidator">
            <summary>Memory pool validator for validating transactions.</summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Broadcasting.FullNodeBroadcasterManager.BroadcastTransactionAsync(NBitcoin.Transaction)">
            <inheritdoc />
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.CoinType">
            <summary>
            The type of coin, as specified in BIP44.
            </summary>
            <remarks>For more, see https://github.com/satoshilabs/slips/blob/master/slip-0044.md</remarks>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.CoinType.Bitcoin">
            <summary>
            Bitcoin
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.CoinType.Testnet">
            <summary>
            Testnet (all coins)
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.CoinType.Stratis">
            <summary>
            Stratis
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Controllers.AddressBookController">
            <summary>
            Controller providing operations on a wallet.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Controllers.AddressBookController.addressBookManager">
            <summary>An instance of the address book manager.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Controllers.AddressBookController.logger">
            <summary>Instance logger.</summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.AddressBookController.AddAddress(Stratis.Bitcoin.Features.Wallet.Models.AddressBookEntryRequest)">
            <summary>
            Adds an entry to the address book.
            </summary>
            <param name="request">An object containing the necessary parameters to add an address book entry.</param>
            <returns>A JSON object containing the newly added entry.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.AddressBookController.RemoveAddress(System.String)">
            <summary>
            Removes an entry from the address book.
            </summary>
            <param name="label">The label of the entry to remove.</param>
            <returns>A JSON object containing the removed entry.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.AddressBookController.GetAddressBook(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the address book entries with the option to implement pagination.
            For example, specifying a value of 40 for skip and a value of 20 for take
            gets entries 21 to 40.
            If neither skip or take arguments are provided, then the entire address
            book is retrieved.
            An address book can be accessed from a wallet, but it is a standalone feature,
            which is not attached to any wallet.
            </summary>
            <param name="skip">A value representing how many entries to skip before retrieving the first entry.</param>
            <param name="take">A value representing how many entries to retrieve.</param>
            <returns>A JSON object containing the address book.</returns>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Controllers.LegacyExtPubKeyConverter">
            <summary>
            Stratis X has a version prefix starting xq5h. Full node has a version prefix xpub for extended public key. 
            3rd parties like Ledger haven't update yet to the full node version prefix.
            This class provides a way to convert from the legacy format to the current format.
            </summary>
            <remarks>This class can be removed when the 3rd parties update their software.</remarks>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.LegacyExtPubKeyConverter.ConvertIfInLegacyStratisFormat(System.String,NBitcoin.Network)">
            <summary>
            Converts a legacy Stratis format into a current Stratis format Base58 extended public key.
            </summary>
            <param name="extPubKey">The extended public key that may or may not need converting.</param>
            <param name="network">The network to get the version bytes for.</param>
            <returns>The same extended public key if version bytes is already the Stratis full node one,
            or the corrected extended public key if the version bytes was the Stratis X one.</returns>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController">
            <summary>
            Controller providing operations on a wallet.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.network">
            <summary>Specification of the network the node runs on - regtest/testnet/mainnet.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.logger">
            <summary>Instance logger.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.dateTimeProvider">
            <summary>Provider of date time functionality.</summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.GenerateMnemonic(System.String,System.Int32)">
            <summary>
            Generates a mnemonic to use for an HD wallet.
            </summary>
            <param name="language">The language for the words in the mnemonic. The options are: English, French, Spanish, Japanese, ChineseSimplified and ChineseTraditional. Defaults to English.</param>
            <param name="wordCount">The number of words in the mnemonic. The options are: 12,15,18,21 or 24. Defaults to 12.</param>
            <returns>A JSON object containing the generated mnemonic.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.Create(Stratis.Bitcoin.Features.Wallet.Models.WalletCreationRequest)">
            <summary>
            Creates a new wallet on this full node.
            </summary>
            <param name="request">An object containing the necessary parameters to create a wallet.</param>
            <returns>A JSON object containing the mnemonic created for the new wallet.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.SignMessage(Stratis.Bitcoin.Features.Wallet.Models.SignMessageRequest)">
            <summary>
            Signs a message and returns the signature.
            </summary>
            <param name="request">The object containing the parameters used to sign a message.</param>
            <returns>A JSON object containing the generated signature.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.VerifyMessage(Stratis.Bitcoin.Features.Wallet.Models.VerifyRequest)">
            <summary>
            Verifies the signature of a message.
            </summary>
            <param name="request">The object containing the parameters verify a signature.</param>
            <returns>A JSON object containing the result of the verification.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.Load(Stratis.Bitcoin.Features.Wallet.Models.WalletLoadRequest)">
            <summary>
            Loads a previously created wallet.
            </summary>
            <param name="request">An object containing the necessary parameters to load an existing wallet</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.Recover(Stratis.Bitcoin.Features.Wallet.Models.WalletRecoveryRequest)">
            <summary>
            Recovers an existing wallet.
            </summary>
            <param name="request">An object containing the parameters used to recover a wallet.</param>
            <returns>A value of Ok if the wallet was successfully recovered.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.RecoverViaExtPubKey(Stratis.Bitcoin.Features.Wallet.Models.WalletExtPubRecoveryRequest)">
            <summary>
            Recovers a wallet using its extended public key. Note that the recovered wallet will not have a private key and is
            only suitable for returning the wallet history using further API calls.
            </summary>
            <param name="request">An object containing the parameters used to recover a wallet using its extended public key.</param>
            <returns>A value of Ok if the wallet was successfully recovered.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.GetGeneralInfo(Stratis.Bitcoin.Features.Wallet.Models.WalletName)">
            <summary>
            Gets some general information about a wallet. This includes the network the wallet is for,
            the creation date and time for the wallet, the height of the blocks the wallet currently holds,
            and the number of connected nodes. 
            </summary>
            <param name="request">The name of the wallet to get the information for.</param>
            <returns>A JSON object containing the wallet information.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.GetHistory(Stratis.Bitcoin.Features.Wallet.Models.WalletHistoryRequest)">
            <summary>
            Gets the history of a wallet. This includes the transactions held by the entire wallet
            or a single account if one is specified. 
            </summary>
            <param name="request">An object containing the parameters used to retrieve a wallet's history.</param>
            <returns>A JSON object containing the wallet history.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.GetBalance(Stratis.Bitcoin.Features.Wallet.Models.WalletBalanceRequest)">
            <summary>
            Gets the balance of a wallet in STRAT (or sidechain coin). Both the confirmed and unconfirmed balance are returned.
            </summary>
            <param name="request">An object containing the parameters used to retrieve a wallet's balance.</param>
            <returns>A JSON object containing the wallet balance.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.GetReceivedByAddress(Stratis.Bitcoin.Features.Wallet.Models.ReceivedByAddressRequest)">
            <summary>
            Gets the balance at a specific wallet address in STRAT (or sidechain coin).
            Both the confirmed and unconfirmed balance are returned.
            This method gets the UTXOs at the address which the wallet can spend.
            </summary>
            <param name="request">An object containing the parameters used to retrieve the balance
            at a specific wallet address.</param>
            <returns>A JSON object containing the balance, fee, and an address for the balance.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.GetMaximumSpendableBalance(Stratis.Bitcoin.Features.Wallet.Models.WalletMaximumBalanceRequest)">
            <summary>
            Gets the maximum spendable balance for an account along with the fee required to spend it.
            </summary>
            <param name="request">An object containing the parameters used to retrieve the
            maximum spendable balance on an account.</param>
            <returns>A JSON object containing the maximum spendable balance for an account
            along with the fee required to spend it.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.GetSpendableTransactions(Stratis.Bitcoin.Features.Wallet.Models.SpendableTransactionsRequest)">
            <summary>
            Gets the spendable transactions for an account with the option to specify how many confirmations
            a transaction needs to be included.
            </summary>
            <param name="request">An object containing the parameters used to retrieve the spendable 
            transactions for an account.</param>
            <returns>A JSON object containing the spendable transactions for an account.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.GetTransactionFeeEstimate(Stratis.Bitcoin.Features.Wallet.Models.TxFeeEstimateRequest)">
            <summary>
            Gets a fee estimate for a specific transaction.
            Fee can be estimated by creating a <see cref="T:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext"/> with no password
            and then building the transaction and retrieving the fee from the context.
            </summary>
            <param name="request">An object containing the parameters used to estimate the fee 
            for a specific transaction.</param>
            <returns>The estimated fee for the transaction.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.BuildTransaction(Stratis.Bitcoin.Features.Wallet.Models.BuildTransactionRequest)">
            <summary>
            Builds a transaction and returns the hex to use when executing the transaction.
            </summary>
            <param name="request">An object containing the parameters used to build a transaction.</param>
            <returns>A JSON object including the transaction ID, the hex used to execute
            the transaction, and the transaction fee.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.SendTransaction(Stratis.Bitcoin.Features.Wallet.Models.SendTransactionRequest)">
            <summary>
            Sends a transaction that has already been built.
            Use the /api/Wallet/build-transaction call to create transactions.
            </summary>
            <param name="request">An object containing the necessary parameters used to a send transaction request.</param>
            <returns>A JSON object containing information about the sent transaction.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.ListWalletsFiles">
            <summary>
            Lists all the files found in the default wallet folder.
            </summary>
            <returns>A JSON object containing the wallet folder path and
            the names of the files found within the folder.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.CreateNewAccount(Stratis.Bitcoin.Features.Wallet.Models.GetUnusedAccountModel)">
            <summary>
            Creates a new account for a wallet.
            Accounts are given the name "account i", where i is an incremental index which starts at 0.
            According to BIP44. an account at index i can only be created when the account at index (i - 1)
            contains at least one transaction. For example, if three accounts named "account 0", "account 1",
            and "account 2" already exist and contain at least one transaction, then the
            the function will create "account 3". However, if "account 2", for example, instead contains no
            transactions, then this API call returns "account 2".
            Accounts are created deterministically, which means that on any device, the accounts and addresses
            for a given seed (or mnemonic) are always the same.
            </summary>
            <param name="request">An object containing the necessary parameters to create a new account in a wallet.</param>
            <returns>A JSON object containing the name of the new account or an existing account
            containing no transactions.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.ListAccounts(Stratis.Bitcoin.Features.Wallet.Models.ListAccountsModel)">
            <summary>
            Gets a list of accounts for the specified wallet.
            </summary>
            <param name="request">An object containing the necessary parameters to list the accounts for a wallet.</param>
            <returns>A JSON object containing a list of accounts for the specified wallet.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.GetUnusedAddress(Stratis.Bitcoin.Features.Wallet.Models.GetUnusedAddressModel)">
            <summary>
            Gets an unused address (in the Base58 format) for a wallet account. This address will not have been assigned
            to any known UTXO (neither to pay funds into the wallet or to pay change back to the wallet).
            </summary>
            <param name="request">An object containing the necessary parameters to retrieve an
            unused address for a wallet account.</param>
            <returns>A JSON object containing the last created and unused address (in Base58 format).</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.GetUnusedAddresses(Stratis.Bitcoin.Features.Wallet.Models.GetUnusedAddressesModel)">
            <summary>
            Gets a specified number of unused addresses (in the Base58 format) for a wallet account. These addresses
            will not have been assigned to any known UTXO (neither to pay funds into the wallet or to pay change back
            to the wallet).
            <param name="request">An object containing the necessary parameters to retrieve
            unused addresses for a wallet account.</param>
            <returns>A JSON object containing the required amount of unused addresses (in Base58 format).</returns>
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.GetAllAddresses(Stratis.Bitcoin.Features.Wallet.Models.GetAllAddressesModel)">
            <summary>
            Gets all addresses for a wallet account.
            <param name="request">An object containing the necessary parameters to retrieve
            all addresses for a wallet account.</param>
            <returns>A JSON object containing all addresses for a wallet account (in Base58 format).</returns>
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.RemoveTransactions(Stratis.Bitcoin.Features.Wallet.Models.RemoveTransactionsModel)">
            <summary>
            Removes transactions from the wallet.
            You might want to remove transactions from a wallet if some unconfirmed transactions disappear
            from the blockchain or the transaction fields within the wallet are updated and a refresh is required to
            populate the new fields. 
            In one situation, you might notice several unconfirmed transaction in the wallet, which you now know were
            never confirmed. You can use this API to correct this by specifying a date and time before the first
            unconfirmed transaction thereby removing all transactions after this point. You can also request a resync as
            part of the call, which calculates the block height for the earliest removal. The wallet sync manager then
            proceeds to resync from there reinstating the confirmed transactions in the wallet. You can also cherry pick
            transactions to remove by specifying their transaction ID. 
            
            <param name="request">An object containing the necessary parameters to remove transactions
            from a wallet. The includes several options for specifying the transactions to remove.</param>
            <returns>A JSON object containing all removed transactions identified by their
            transaction ID and creation time.</returns>
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.GetExtPubKey(Stratis.Bitcoin.Features.Wallet.Models.GetExtPubKeyModel)">
            <summary>
            Gets the extended public key of a specified wallet account.
            <param name="request">An object containing the necessary parameters to retrieve
            the extended public key for a wallet account.</param>
            <returns>A JSON object containing the extended public key for a wallet account.</returns>
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.Sync(Stratis.Bitcoin.Features.Wallet.Models.HashModel)">
            <summary>
            Requests the node resyncs from a block specified by its block hash.
            Internally, the specified block is taken as the new wallet tip
            and all blocks after it are resynced.
            </summary>
            <param name="request">An object containing the necessary parameters
            to request a resync.</param>
            <returns>A value of Ok if the resync was successful.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.SyncFromDate(Stratis.Bitcoin.Features.Wallet.Models.WalletSyncFromDateRequest)">
            <summary>
            Request the node resyncs starting from a given date and time.
            Internally, the first block created on or after the supplied date and time
            is taken as the new wallet tip and all blocks after it are resynced.
            </summary>
            <param name="request">An object containing the necessary parameters
            to request a resync.</param>
            <returns>A value of Ok if the resync was successful.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Controllers.WalletController.SplitCoins(Stratis.Bitcoin.Features.Wallet.Models.SplitCoinsRequest)">
            <summary>Creates requested amount of UTXOs each of equal value.</summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.FeeType">
            <summary>
            An indicator of how fast a transaction will be accepted in a block.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.FeeType.Low">
            <summary>
            Slow.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.FeeType.Medium">
            <summary>
            Avarage.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.FeeType.High">
            <summary>
            Fast.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.FeeParser.ToConfirmations(Stratis.Bitcoin.Features.Wallet.FeeType)">
            <summary>
            Map a fee type to the number of confirmations
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AccountHistory.Account">
            <summary>
            The account for which the history is retrieved.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AccountHistory.History">
            <summary>
            The collection of history items.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.FlatHistory">
            <summary>
            A class that represents a flat view of the wallets history.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.FlatHistory.Address">
            <summary>
            The address associated with this UTXO.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.FlatHistory.Transaction">
            <summary>
            The transaction representing the UTXO.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.HdOperations">
            <summary>
            Class providing helper methods for working with Hierarchical Deterministic (HD) wallets.
            </summary>
            <seealso cref="!:https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki" />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdOperations.GeneratePublicKey(System.String,System.Int32,System.Boolean)">
            <summary>
            Generates an HD public key derived from an extended public key.
            </summary>
            <param name="accountExtPubKey">The extended public key used to generate child keys.</param>
            <param name="index">The index of the child key to generate.</param>
            <param name="isChange">A value indicating whether the public key to generate corresponds to a change address.</param>
            <returns>
            An HD public key derived from an extended public key.
            </returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdOperations.GetExtendedPrivateKey(NBitcoin.Key,System.Byte[],System.String,NBitcoin.Network)">
            <summary>
            Gets the extended private key for an account.
            </summary>
            <param name="privateKey">The private key from which to generate the extended private key.</param>
            <param name="chainCode">The chain code used in creating the extended private key.</param>
            <param name="hdPath">The HD path of the account for which to get the extended private key.</param>
            <param name="network">The network for which to generate this extended private key.</param>
            <returns></returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdOperations.GetExtendedPublicKey(NBitcoin.Key,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Gets the extended public key for an account.
            </summary>
            <param name="privateKey">The private key from which to generate the extended public key.</param>
            <param name="chainCode">The chain code used in creating the extended public key.</param>
            <param name="coinType">Type of the coin of the account for which to generate an extended public key.</param>
            <param name="accountIndex">Index of the account for which to generate an extended public key.</param>
            <returns>The extended public key for an account, used to derive child keys.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdOperations.GetExtendedPublicKey(NBitcoin.Key,System.Byte[],System.String)">
            <summary>
            Gets the extended public key corresponding to an HD path.
            </summary>
            <param name="privateKey">The private key from which to generate the extended public key.</param>
            <param name="chainCode">The chain code used in creating the extended public key.</param>
            <param name="hdPath">The HD path for which to get the extended public key.</param>
            <returns>The extended public key, used to derive child keys.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdOperations.GetAccountHdPath(System.Int32,System.Int32)">
            <summary>
            Gets the HD path of an account.
            </summary>
            <param name="coinType">Type of the coin this account is in.</param>
            <param name="accountIndex">Index of the account.</param>
            <returns>The HD path of an account.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdOperations.GetExtendedKey(System.String,System.String)">
            <summary>
            Gets the extended key generated by this mnemonic and passphrase.
            </summary>
            <param name="mnemonic">The mnemonic used to generate the key.</param>
            <param name="passphrase">The passphrase used in generating the key.</param>
            <returns>The extended key generated by this mnemonic and passphrase.</returns>
            <remarks>This key is sometimes referred to as the 'root seed' or the 'master key'.</remarks>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdOperations.GetExtendedKey(NBitcoin.Mnemonic,System.String)">
            <summary>
            Gets the extended key generated by this mnemonic and passphrase.
            </summary>
            <param name="mnemonic">The mnemonic used to generate the key.</param>
            <param name="passphrase">The passphrase used in generating the key.</param>
            <returns>The extended key generated by this mnemonic and passphrase.</returns>
            <remarks>This key is sometimes referred to as the 'root seed' or the 'master key'.</remarks>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdOperations.CreateHdPath(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Creates an address' HD path, according to BIP 44.
            </summary>
            <param name="coinType">Type of coin in the HD path.</param>
            <param name="accountIndex">Index of the account in the HD path.</param>
            <param name="isChange">A value indicating whether the HD path to generate corresponds to a change address.</param>
            <param name="addressIndex">Index of the address in the HD path.</param>
            <returns>The HD path.</returns>
            <remarks>Refer to <seealso cref="!:https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki#path-levels"/> for the format of the HD path.</remarks>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdOperations.GetCoinType(System.String)">
            <summary>
            Gets the type of coin this HD path is for.
            </summary>
            <param name="hdPath">The HD path.</param>
            <returns>The type of coin. <seealso cref="!:https://github.com/satoshilabs/slips/blob/master/slip-0044.md"/>.</returns>
            <exception cref="T:System.FormatException">An exception is thrown if the HD path is not well-formed.</exception>
            <remarks>Refer to <seealso cref="!:https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki#path-levels"/> for the format of the HD path.</remarks>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdOperations.IsChangeAddress(System.String)">
            <summary>
            Determines whether the HD path corresponds to a change address.
            </summary>
            <param name="hdPath">The HD path.</param>
            <returns>A value indicating if the HD path corresponds to a change address.</returns>
            <exception cref="T:System.FormatException">An exception is thrown if the HD path is not well-formed.</exception>
            <remarks>Refer to <seealso cref="!:https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki#path-levels"/> for the format of the HD path.</remarks>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdOperations.DecryptSeed(System.String,System.String,NBitcoin.Network)">
            <summary>
            Decrypts the encrypted private key (seed).
            </summary>
            <param name="encryptedSeed">The encrypted seed to decrypt.</param>
            <param name="password">The password used to decrypt the encrypted seed.</param>
            <param name="network">The network this seed applies to.</param>
            <returns>The decrypted private key.</returns>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Helpers.SentTransactionItemModelComparer">
            <summary>
             Used for comparing a list of TransactionItemModel to each other.
            </summary>
            <remarks>
             This specific comparer has been made to filter out duplicate payment listings in the case of a transaction with multiple inputs.
             This causes multiple items inside the wallet data that all have the same amount, transaction/spending id and payment details.
             However not all fields on this model are equal to each other so we only compare the ones we need.
             See: https://github.com/stratisproject/Breeze/issues/175
            </remarks>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Helpers.SentTransactionItemModelComparer.Equals(Stratis.Bitcoin.Features.Wallet.Models.TransactionItemModel,Stratis.Bitcoin.Features.Wallet.Models.TransactionItemModel)">
            <summary>
             Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type TransactionItemModel to compare.</param>
            <param name="y">The second object of type TransactionItemModel to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Helpers.SentTransactionItemModelComparer.GetHashCode(Stratis.Bitcoin.Features.Wallet.Models.TransactionItemModel)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The System.Object for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Interfaces.IAddressBookManager">
            <summary>
            An interface providing operations on an address book.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IAddressBookManager.Initialize">
            <summary>
            Initializes the address book manager.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IAddressBookManager.GetAddressBook">
            <summary>
            Get the address book.
            </summary>
            <returns>The address book.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IAddressBookManager.AddNewAddress(System.String,System.String)">
            <summary>
            Add a new entry to the address book.
            </summary>
            <param name="label">A label uniquely identifying the entry.</param>
            <param name="address">The address.</param>
            <returns>The newly added entry in the address book.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IAddressBookManager.RemoveAddress(System.String)">
            <summary>
            Remove an entry from the address book.
            </summary>
            <param name="label">A label uniquely identifying the entry to remove.</param>
            <returns>The entry removed from the address book.</returns>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager">
            <summary>
            Interface for a manager providing operations on wallets.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.Start">
            <summary>
            Starts this wallet manager.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.Stop">
            <summary>
            Stops the wallet manager.
            <para>Internally it waits for async loops to complete before saving the wallets to disk.</para>
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.WalletTipHash">
            <summary>
            The last processed block.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.WalletTipHeight">
            <summary>
            The last processed block height.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetSpendableTransactionsInWallet(System.String,System.Int32)">
            <summary>
            Lists all spendable transactions from all accounts in the wallet.
            </summary>
            <returns>A collection of spendable outputs</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetSpendableTransactionsInWalletForStaking(System.String,System.Int32)">
            <summary>
            Lists all spendable transactions from the accounts in the wallet participating in staking.
            </summary>
            <returns>A collection of spendable outputs</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetUnspentTransactionsInWallet(System.String,System.Int32,System.Func{Stratis.Bitcoin.Features.Wallet.HdAccount,System.Boolean})">
            <summary>
            List all unspent transactions contained in a given wallet.
            This is distinct from the list of spendable transactions. A transaction can be unspent but not yet spendable due to coinbase/stake maturity, for example.
            </summary>
            <returns>A collection of unspent outputs</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetValidStakingTemplates">
            <summary>
            Helps identify UTXO's that can participate in staking.
            </summary>
            <returns>A dictionary containing string and template pairs - e.g. { "P2PK", PayToPubkeyTemplate.Instance }</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetTransactionBuilderExtensionsForStaking">
            <summary>
            Returns additional transaction builder extensions to use for building staking transactions.
            </summary>
            <returns>Transaction builder extensions to use for building staking transactions.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetSpendableTransactionsInAccount(Stratis.Bitcoin.Features.Wallet.WalletAccountReference,System.Int32)">
            <summary>
            Lists all spendable transactions from the account specified in <see cref="T:Stratis.Bitcoin.Features.Wallet.WalletAccountReference"/>.
            </summary>
            <returns>A collection of spendable outputs that belong to the given account.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.CreateWallet(System.String,System.String,System.String,NBitcoin.Mnemonic)">
            <summary>
            Creates a wallet and persist it as a file on the local system.
            </summary>
            <param name="password">The password used to encrypt sensitive info.</param>
            <param name="name">The name of the wallet.</param>
            <param name="passphrase">The passphrase used in the seed.</param>
            <param name="mnemonic">The user's mnemonic for the wallet.</param>
            <returns>A mnemonic defining the wallet's seed used to generate addresses.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.SignMessage(System.String,System.String,System.String,System.String)">
            <summary>
            Signs a string message.
            </summary>
            <param name="password">The user's password.</param>
            <param name="walletName">The name of the wallet.</param>
            <param name="externalAddress">Address to use to sign.</param>
            <param name="message">Message to sign.</param>
            <returns>The generated signature.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.VerifySignedMessage(System.String,System.String,System.String)">
            <summary>
            Verifies the signed message.
            </summary>
            <param name="externalAddress">Address used to sign.</param>
            <param name="message">Message to verify.</param>
            <param name="signature">Message signature.</param>
            <returns>True if the signature is valid, false if it is invalid.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.LoadWallet(System.String,System.String)">
            <summary>
            Loads a wallet from a file.
            </summary>
            <param name="password">The user's password.</param>
            <param name="name">The name of the wallet.</param>
            <returns>The wallet.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.UnlockWallet(System.String,System.String,System.Int32)">
            <summary>
            Unlocks a wallet for the specified time.
            </summary>
            <param name="password">The wallet password.</param>
            <param name="name">The name of the wallet.</param>
            <param name="timeout">The timeout in seconds.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.LockWallet(System.String)">
            <summary>
            Locks the wallet.
            </summary>
            <param name="name">The name of the wallet.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.RecoverWallet(System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>
            Recovers a wallet using mnemonic and password.
            </summary>
            <param name="password">The user's password.</param>
            <param name="name">The name of the wallet.</param>
            <param name="mnemonic">The user's mnemonic for the wallet.</param>
            <param name="passphrase">The passphrase used in the seed.</param>
            <param name="creationTime">The date and time this wallet was created.</param>
            <returns>The recovered wallet.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.RecoverWallet(System.String,NBitcoin.ExtPubKey,System.Int32,System.DateTime)">
            <summary>
            Recovers a wallet using extended public key and account index.
            </summary>
            <param name="name">The name of the wallet.</param>
            <param name="extPubKey">The extended public key.</param>
            <param name="accountIndex">The account number.</param>
            <param name="creationTime">The date and time this wallet was created.</param>
            <returns></returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.DeleteWallet">
            <summary>
            Deletes a wallet.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetUnusedAccount(System.String,System.String)">
            <summary>
            Gets an account that contains no transactions.
            </summary>
            <param name="walletName">The name of the wallet from which to get an account.</param>
            <param name="password">The password used to decrypt the private key.</param>
            <remarks>
            According to BIP44, an account at index (i) can only be created when the account
            at index (i - 1) contains transactions.
            </remarks>
            <returns>An unused account.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetUnusedAccount(Stratis.Bitcoin.Features.Wallet.Wallet,System.String)">
            <summary>
            Gets an account that contains no transactions.
            </summary>
            <param name="wallet">The wallet from which to get an account.</param>
            <param name="password">The password used to decrypt the private key.</param>
            <remarks>
            According to BIP44, an account at index (i) can only be created when the account
            at index (i - 1) contains transactions.
            </remarks>
            <returns>An unused account.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetUnusedAddress(Stratis.Bitcoin.Features.Wallet.WalletAccountReference)">
            <summary>
            Gets an address that contains no transaction.
            </summary>
            <param name="accountReference">The name of the wallet and account</param>
            <returns>An unused address or a newly created address, in Base58 format.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetUnusedChangeAddress(Stratis.Bitcoin.Features.Wallet.WalletAccountReference)">
            <summary>
            Gets the first change address that contains no transaction.
            </summary>
            <param name="accountReference">The name of the wallet and account.</param>
            <returns>An unused change address or a newly created change address, in Base58 format.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetUnusedAddresses(Stratis.Bitcoin.Features.Wallet.WalletAccountReference,System.Int32,System.Boolean)">
            <summary>
            Gets a collection of unused receiving or change addresses.
            </summary>
            <param name="accountReference">The name of the wallet and account.</param>
            <param name="count">The number of addresses to create.</param>
            <param name="isChange">A value indicating whether or not the addresses to get should be receiving or change addresses.</param>
            <returns>A list of unused addresses. New addresses will be created as necessary.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetHistory(System.String,System.String)">
            <summary>
            Gets the history of transactions contained in an account.
            If no account name is specified, history will be returned for all accounts in the wallet.
            </summary>
            <param name="walletName">The wallet name.</param>
            <param name="accountName">The account name.</param>
            <returns>Collection of address history and transaction pairs.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetHistory(Stratis.Bitcoin.Features.Wallet.HdAccount)">
            <summary>
            Gets the history of the transactions in addresses contained in this account.
            </summary>
            <param name="account">The account for which to get history.</param>
            <returns>The history for this account.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetBalances(System.String,System.String)">
            <summary>
            Gets the balance of transactions contained in an account.
            If no account name is specified, balances will be returned for all accounts in the wallet.
            </summary>
            <param name="walletName">The wallet name.</param>
            <param name="accountName">The account name.</param>
            <returns>Collection of account balances.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetAddressBalance(System.String)">
            <summary>
            Gets the balance of transactions for this specific address.
            </summary>
            <param name="address">The address to get the balance from.</param>
            <returns>The address balance for an address.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetWallet(System.String)">
            <summary>
            Gets some general information about a wallet.
            </summary>
            <param name="walletName">The name of the wallet.</param>
            <returns></returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetAccounts(System.String)">
            <summary>
            Gets a list of accounts.
            </summary>
            <param name="walletName">The name of the wallet to look into.</param>
            <returns></returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.LastBlockHeight">
            <summary>
            Gets the last block height.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.RemoveBlocks(NBitcoin.ChainedHeader)">
            <summary>
            Remove all the transactions in the wallet that are above this block height
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.ProcessBlock(NBitcoin.Block,NBitcoin.ChainedHeader)">
            <summary>
            Processes a block received from the network.
            </summary>
            <param name="block">The block.</param>
            <param name="chainedHeader">The blocks chain of headers.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.ProcessTransaction(NBitcoin.Transaction,System.Nullable{System.Int32},NBitcoin.Block,System.Boolean)">
            <summary>
            Processes a transaction received from the network.
            </summary>
            <param name="transaction">The transaction.</param>
            <param name="blockHeight">The height of the block this transaction came from. Null if it was not a transaction included in a block.</param>
            <param name="block">The block in which this transaction was included.</param>
            <param name="isPropagated">Transaction propagation state.</param>
            <returns>A value indicating whether this transaction affects the wallet.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.SaveWallet(Stratis.Bitcoin.Features.Wallet.Wallet)">
            <summary>
            Saves the wallet into the file system.
            </summary>
            <param name="wallet">The wallet to save.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.SaveWallets">
            <summary>
            Saves all the loaded wallets into the file system.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetWalletFileExtension">
            <summary>
            Gets the extension of the wallet files.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetWalletsNames">
            <summary>
            Gets all the wallets' names.
            </summary>
            <returns>A collection of the wallets' names.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.UpdateLastBlockSyncedHeight(Stratis.Bitcoin.Features.Wallet.Wallet,NBitcoin.ChainedHeader)">
            <summary>
            Updates the wallet with the height of the last block synced.
            </summary>
            <param name="wallet">The wallet to update.</param>
            <param name="chainedHeader">The height of the last block synced.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.UpdateLastBlockSyncedHeight(NBitcoin.ChainedHeader)">
            <summary>
            Updates all the loaded wallets with the height of the last block synced.
            </summary>
            <param name="chainedHeader">The height of the last block synced.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetWalletByName(System.String)">
            <summary>
            Gets a wallet given its name.
            </summary>
            <param name="walletName">The name of the wallet to get.</param>
            <returns>A wallet or null if it doesn't exist</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetFirstWalletBlockLocator">
            <summary>
            Gets the block locator of the first loaded wallet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetWalletsFiles">
            <summary>
            Gets the list of the wallet filenames, along with the folder in which they're contained.
            </summary>
            <returns>The wallet filenames, along with the folder in which they're contained.</returns>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.ContainsWallets">
            <summary>
            Gets whether there are any wallet files loaded or not.
            </summary>
            <returns>Whether any wallet files are loaded.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetExtPubKey(Stratis.Bitcoin.Features.Wallet.WalletAccountReference)">
            <summary>
            Gets the extended public key of an account.
            </summary>
            <param name="accountReference">The account.</param>
            <returns>The extended public key.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetExtKey(Stratis.Bitcoin.Features.Wallet.WalletAccountReference,System.String,System.Boolean)">
            <summary>
            Gets the extended private key of an account.
            </summary>
            <param name="accountReference">The account.</param>
            <param name="password">The password used to decrypt the encrypted seed.</param>
            <param name="cache">whether to cache the private key for future use.</param>
            <returns>The private key.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetEarliestWalletHeight">
            <summary>
            Gets the lowest LastBlockSyncedHeight of all loaded wallet account roots.
            </summary>
            <returns>The lowest LastBlockSyncedHeight or null if there are no account roots yet.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.GetOldestWalletCreationTime">
            <summary>
            Gets the oldest wallet creation time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.RemoveTransactionsByIds(System.String,System.Collections.Generic.IEnumerable{NBitcoin.uint256})">
            <summary>
            Removes the specified transactions from the wallet and persist it.
            </summary>
            <param name="walletName">The name of the wallet to remove transactions from.</param>
            <param name="transactionsIds">The IDs of transactions to remove.</param>
            <returns>A list of objects made up of a transactions ID along with the time at which they were created.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.RemoveAllTransactions(System.String)">
            <summary>
            Removes all the transactions from the wallet and persist it.
            </summary>
            <param name="walletName">The name of the wallet to remove transactions from.</param>
            <returns>A list of objects made up of a transactions ID along with the time at which they were created.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager.RemoveTransactionsFromDate(System.String,System.DateTimeOffset)">
            <summary>
            Removes all the transactions that occurred after a certain date.
            </summary>
            <param name="walletName">The name of the wallet to remove transactions from.</param>
            <param name="fromDate">The date after which the transactions should be removed.</param>
            <returns>A list of objects made up of a transactions ID along with the time at which they were created.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletSyncManager.Start">
            <summary>
            Starts the walletSyncManager.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletSyncManager.Stop">
            <summary>
            Stops the walletSyncManager.
            <para>
            We need to call <see cref="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletSyncManager.Stop"/> explicitly to check that the internal async loop isn't still running
            and subsequentlly dispose of it properly.
            </para>
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletSyncManager.ProcessBlock(NBitcoin.Block)">
            <summary>
            Processes a new block.
            </summary>
            <param name="block">The block to process.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletSyncManager.ProcessTransaction(NBitcoin.Transaction)">
            <summary>
            Processes a new transaction which is in a pending state (not included in a block).
            </summary>
            <param name="transaction">The transaction to process.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletSyncManager.SyncFromDate(System.DateTime)">
            <summary>
            Synchronize the wallet starting from the date passed as a parameter.
            </summary>
            <param name="date">The date from which to start the sync process.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletSyncManager.SyncFromHeight(System.Int32)">
            <summary>
            Synchronize the wallet starting from the height passed as a parameter.
            </summary>
            <param name="height">The height from which to start the sync process.</param>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletSyncManager.WalletTip">
            <summary>
            The current tip of the wallet.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletTransactionHandler.BuildTransaction(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext)">
            <summary>
            Builds a new transaction based on information from the <see cref="T:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext"/>.
            </summary>
            <param name="context">The context that is used to build a new transaction.</param>
            <returns>The new transaction.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletTransactionHandler.FundTransaction(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext,NBitcoin.Transaction)">
            <summary>
            Adds inputs to a transaction until it has enough in value to meet its out value.
            </summary>
            <param name="context">The context associated with the current transaction being built.</param>
            <param name="transaction">The transaction that will have more inputs added to it.</param>
            <remarks>
            This will not modify existing inputs, and will add at most one change output to the outputs.
            No existing outputs will be modified unless <see cref="P:Stratis.Bitcoin.Features.Wallet.Recipient.SubtractFeeFromAmount"/> is specified.
            Note that inputs which were signed may need to be resigned after completion since in/outputs have been added.
            The inputs added may be signed depending on whether a <see cref="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.WalletPassword"/> is passed.
            Note that all existing inputs must have their previous output transaction be in the wallet.
            </remarks>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletTransactionHandler.GetMaximumSpendableAmount(Stratis.Bitcoin.Features.Wallet.WalletAccountReference,Stratis.Bitcoin.Features.Wallet.FeeType,System.Boolean)">
            <summary>
            Calculates the maximum amount a user can spend in a single transaction, taking into account the fees required.
            </summary>
            <param name="accountReference">The account from which to calculate the amount.</param>
            <param name="feeType">The type of fee used to calculate the maximum amount the user can spend. The higher the fee, the smaller this amount will be.</param>
            <param name="allowUnconfirmed"><c>true</c> to include unconfirmed transactions in the calculation, <c>false</c> otherwise.</param>
            <returns>The maximum amount the user can spend in a single transaction, along with the fee required.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletTransactionHandler.EstimateFee(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext)">
            <summary>
            Estimates the fee for the transaction based on information from the <see cref="T:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext"/>.
            </summary>
            <param name="context">The context that is used to build a new transaction.</param>
            <returns>The estimated fee.</returns>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.AddressBookModel">
            <summary>
            The model for the address book, usable by the API.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Models.AddressBookModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stratis.Bitcoin.Features.Wallet.Models.AddressBookModel"/> class.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.AddressBookModel.Addresses">
            <summary>
            A list of addresses.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.AddressBookEntryModel">
            <summary>
            Represents an entry in the address book.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.AddressBookEntryModel.Address">
            <summary>
            The Base58 representation of this address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.AddressBookEntryModel.Label">
            <summary>
            The label identifying this entry.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.AddressesModel">
            <summary>
            A model representing a list of addresses the user has in a wallet account.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Models.AddressesModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stratis.Bitcoin.Features.Wallet.Models.AddressesModel"/> class.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.AddressesModel.Addresses">
            <summary>
            A list of addresses.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.AddressModel">
            <summary>
            Represents an address a user has in their wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.AddressModel.Address">
            <summary>
            The Base58 representation of this address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.AddressModel.IsUsed">
            <summary>
            A value indicating whether this address has been used in a transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.AddressModel.IsChange">
            <summary>
            A value indicating whether this address is a change address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.AddressModel.AmountConfirmed">
            <summary>
            The balance of confirmed transactions. 
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.AddressModel.AmountUnconfirmed">
            <summary>
            The balance of unconfirmed transactions.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionModel">
            <summary>Model for RPC method gettransaction.</summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionModel.Amount">
            <summary>
            The total amount recieved or spent in this transaction.
            Can be positive (received), negative (sent) or 0 (payment to yourself).
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionModel.Fee">
            <summary>
            The amount of the fee. This is negative and only available for the 'send' category of transactions.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionModel.Confirmations">
            <summary>
            The number of confirmations.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionModel.Isgenerated">
            <summary>
            Set to true if the transaction is a coinbase or a coinstake. Not returned for regular transactions.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionModel.BlockHash">
            <summary>
            The block hash.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionModel.BlockIndex">
            <summary>
            The index of the transaction in the block that includes it.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionModel.BlockTime">
            <summary>
            The time in seconds since epoch (1 Jan 1970 GMT).
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionModel.TransactionId">
            <summary>
            The transaction id.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionModel.TransactionTime">
            <summary>
            The transaction time in seconds since epoch (1 Jan 1970 GMT).
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionModel.TimeReceived">
            <summary>
            The time received in seconds since epoch (1 Jan 1970 GMT).
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionModel.Details">
            <summary>
            Details of the transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionModel.Hex">
            <summary>
            Raw data for the transaction.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionDetailsModel">
            <summary>Transaction details model for RPC method gettransaction.</summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionDetailsModel.Address">
            <summary>
            The address involved in the transaction.
            For 'send' it's the external destination address it was sent to, for 'receive' it's the wallet address it was received into.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionDetailsModel.Category">
            <summary>
            The transaction category.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionDetailsModel.Amount">
            <summary>
            The amount.
            Can be positive (received) or negative (sent).
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionDetailsModel.Fee">
            <summary>
            The amount of the fee. This is negative and only available for the 'send' category of transactions.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionDetailsModel.OutputIndex">
            <summary>
            The index of the output being sent or received.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionDetailsCategoryModel.Receive">
            <summary>
            Non-coinbase transactions received.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionDetailsCategoryModel.Send">
            <summary>
            Transactions sent.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionDetailsCategoryModel.Generate">
            <summary>
            Mature coinbase or coinstake transactions.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionDetailsCategoryModel.Immature">
            <summary>
            Immature coinbase or coinstake transactions.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Models.GetTransactionDetailsCategoryModel.Orphan">
            <summary>
            Orphaned coinbase or coinstake transactions received.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.MaxSpendableAmountModel">
            <summary>
            A model representing the maximum amount a use can spend, along with the required fee.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.MaxSpendableAmountModel.MaxSpendableAmount">
            <summary>
            Gets or sets the maximum spendable amount on an account.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.MaxSpendableAmountModel.Fee">
            <summary>
            Gets or sets the fee required the <see cref="P:Stratis.Bitcoin.Features.Wallet.Models.MaxSpendableAmountModel.MaxSpendableAmount"/>.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.RemovedTransactionModel">
            <summary>
            Class containing details of a transaction successfully removed from the wallet.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.HashModel">
            <summary>
            A class containing the necessary parameters for a wallet resynchronization request
            which takes the hash of the block to resync after. 
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.HashModel.Hash">
            <summary>
            The hash of the block to resync after. 
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.WalletCreationRequest">
            <summary>
            A class containing the necessary parameters for a create wallet request.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletCreationRequest.Mnemonic">
            <summary>
            The mnemonic used to create the HD wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletCreationRequest.Password">
            <summary>
            A password used to encrypt the wallet for secure storage.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletCreationRequest.Passphrase">
            <summary>
            An optional additional seed, which is joined together with the <see cref="P:Stratis.Bitcoin.Features.Wallet.Models.WalletCreationRequest.Mnemonic"/>
            when the wallet is created.
            Although you will be prompted to enter a passphrase, an empty string is still valid.
            </summary>
            <remarks>
            The passphrase can be an empty string.
            </remarks>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletCreationRequest.Name">
            <summary>
            The name of the wallet.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.WalletLoadRequest">
            <summary>
            A class containing the necessary parameters for a load wallet request.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletLoadRequest.Password">
            <summary>
            The password that was used to create the wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletLoadRequest.Name">
            <summary>
            The name of the wallet.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.WalletRecoveryRequest">
            <summary>
            A class containing the necessary parameters for a wallet recovery request.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletRecoveryRequest.Mnemonic">
            <summary>
            The mnemonic that was used to create the wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletRecoveryRequest.Password">
            <summary>
            The password that was used to create the wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletRecoveryRequest.Passphrase">
            <summary>
            The passphrase that was used to create the wallet.
            </summary>
            <remarks>
            If the wallet was created before <see cref="P:Stratis.Bitcoin.Features.Wallet.Models.WalletRecoveryRequest.Passphrase"/> was available as a parameter, set the passphrase to be the same as the password.
            </remarks>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletRecoveryRequest.Name">
            <summary>
            The name of the wallet.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.WalletExtPubRecoveryRequest">
            <summary>
            A class containing the necessary parameters for a wallet recovery request using its extended public key.
            Note that the recovered wallet will not have a private key and is
            only suitable for returning the wallet history using further API calls. As such,
            only the extended public key is used in the recovery process.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletExtPubRecoveryRequest.ExtPubKey">
            <summary>
            The extended public key used by the wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletExtPubRecoveryRequest.AccountIndex">
            <summary>
            The index of the account to generate for the wallet. For example, specifying a value of 0
            generates "account0".
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletExtPubRecoveryRequest.Name">
            <summary>
            The name to give the recovered wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletExtPubRecoveryRequest.CreationDate">
            <summary>
            The creation date and time to give the recovered wallet. 
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.WalletHistoryRequest">
            <summary>
            A class containing the necessary parameters for a wallet history request.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletHistoryRequest.WalletName">
            <summary>
            The name of the wallet to recover the history for.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletHistoryRequest.AccountName">
            <summary>
            Optional. The name of the account to recover the history for. If no account name is specified,
            the entire history of the wallet is recovered.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletHistoryRequest.Address">
            <summary>
            Optional. If set, will filter the transaction history for all transactions made to or from the given address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletHistoryRequest.Skip">
            <summary>
            An optional value allowing (with Take) pagination of the wallet's history. If given,
            the member specifies the numbers of records in the wallet's history to skip before
            beginning record retrieval; otherwise the wallet history records are retrieved starting from 0.
            </summary>      
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletHistoryRequest.Take">
            <summary>
            An optional value allowing (with Skip) pagination of the wallet's history. If given,
            the member specifies the number of records in the wallet's history to retrieve in this call; otherwise all
            wallet history records are retrieved.
            </summary>  
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletHistoryRequest.SearchQuery">
            <summary>
            An optional string that can be used to match different data in the transaction records.
            It is possible to match on the following: the transaction ID, the address at which funds where received,
            and the address to which funds where sent.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.WalletBalanceRequest">
            <summary>
            A class containing the necessary parameters for a wallet balance request.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletBalanceRequest.WalletName">
            <summary>
            The name of the wallet to retrieve the balance for.
            </summary> 
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletBalanceRequest.AccountName">
            <summary>
            The name of the account to retrieve the balance for. If no account name is supplied,
            then the balance for the entire wallet (all accounts) is retrieved.
            </summary>         
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.WalletMaximumBalanceRequest">
            <summary>
            A class containing the necessary parameters for a request to get the maximum
            spendable amount for a specific wallet account.
            </summary>
            <seealso cref="T:Stratis.Bitcoin.Features.Wallet.Models.RequestModel" />
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletMaximumBalanceRequest.WalletName">
            <summary>
            The name of the wallet to retrieve the maximum spendable amount for.
            </summary> 
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletMaximumBalanceRequest.AccountName">
            <summary>
            The name of the account to retrieve the maximum spendable amount for.
            </summary>   
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletMaximumBalanceRequest.FeeType">
            <summary>
            The type of fee to use when working out the fee required to spend the amount.
            Specify "low", "medium", or "high".
            </summary>        
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletMaximumBalanceRequest.AllowUnconfirmed">
            <summary>
            A flag that specifies whether to include the unconfirmed amounts held at account addresses
            as spendable.
            </summary> 
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.ReceivedByAddressRequest">
            <summary>
            Model object to use as input to the Api request for getting the balance for an address.
            </summary>
            <seealso cref="T:Stratis.Bitcoin.Features.Wallet.Models.RequestModel" />
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.TxFeeEstimateRequest">
            <summary>
            A class containing the necessary parameters for a transaction fee estimate request.
            </summary>
            <seealso cref="T:Stratis.Bitcoin.Features.Wallet.Models.RequestModel" />
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TxFeeEstimateRequest.WalletName">
            <summary>
            The name of the wallet containing the UTXOs to use in the transaction.
            </summary> 
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TxFeeEstimateRequest.AccountName">
            <summary>
            The name of the account containing the UTXOs to use in the transaction.
            </summary> 
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TxFeeEstimateRequest.Outpoints">
            <summary>
            A list of outpoints to use as inputs for the transaction.
            </summary> 
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TxFeeEstimateRequest.Recipients">
            <summary>
            A list of transaction recipients. For each recipient, specify the Pubkey script and the amount the
            recipient will receive in STRAT (or a sidechain coin). If the transaction was realized,
            both the values would be used to create the UTXOs for the transaction recipients.
            </summary> 
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TxFeeEstimateRequest.OpReturnData">
            <summary>
            A string containing any OP_RETURN output data to store as part of the transaction.
            </summary>       
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TxFeeEstimateRequest.OpReturnAmount">
            <summary>
            The funds in STRAT (or a sidechain coin) to include with the OP_RETURN output. Currently, specifying
            some funds helps OP_RETURN outputs be relayed around the network.
            </summary>   
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TxFeeEstimateRequest.FeeType">
            <summary>
            The type of fee to use when working out the fee for the transaction. Specify "low", "medium", or "high".
            </summary>  
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TxFeeEstimateRequest.AllowUnconfirmed">
            <summary>
            A flag that specifies whether to include the unconfirmed amounts as inputs to the transaction.
            If this flag is not set, at least one confirmation is required for each input.
            </summary> 
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TxFeeEstimateRequest.ShuffleOutputs">
            <summary>
            A flag that specifies whether to shuffle the transaction outputs for increased privacy. Randomizing the
            the order in which the outputs appear when the transaction is being built stops it being trivial to
            determine whether a transaction output is payment or change. This helps defeat unsophisticated
            chain analysis algorithms. 
            Defaults to true.
            </summary>         
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TxFeeEstimateRequest.ChangeAddress">
            <summary>
            The address to which the change from the transaction should be returned. If this is not set,
            the default behaviour from the <see cref="T:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler"/> will be used to determine the change address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.OutpointRequest.TransactionId">
            <summary>
            The transaction ID.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.OutpointRequest.Index">
            <summary>
            The index of the output in the transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.RecipientModel.DestinationAddress">
            <summary>
            The destination address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.RecipientModel.Amount">
            <summary>
            The amount that will be sent.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.BuildTransactionRequest">
            <summary>
            A class containing the necessary parameters for a build transaction request.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.BuildTransactionRequest.FeeAmount">
            <summary>
            The fee for the transaction in STRAT (or a sidechain coin).
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.BuildTransactionRequest.Password">
            <summary>
            The password for the wallet containing the funds for the transaction.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Models.BuildTransactionRequest.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.SendTransactionRequest">
            <summary>
            A class containing the necessary parameters for a send transaction request.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.SendTransactionRequest.Hex">
            <summary>
            A string containing the transaction in hexadecimal format.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.RemoveTransactionsModel">
            <summary>
            A class containing the necessary parameters for a remove transactions request.
            </summary>
            <seealso cref="T:Stratis.Bitcoin.Features.Wallet.Models.RequestModel" />
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.RemoveTransactionsModel.WalletName">
            <summary>
            The name of the wallet to remove the transactions from.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.RemoveTransactionsModel.TransactionsIds">
            <summary>
            The IDs of the transactions to remove.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.RemoveTransactionsModel.FromDate">
            <summary>
            A date and time after which all transactions should be removed.
            </summary>        
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.RemoveTransactionsModel.DeleteAll">
            <summary>
            A flag that specifies whether to delete all transactions from a wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.RemoveTransactionsModel.ReSync">
            <summary>
            A flag that specifies whether to resync the wallet after removing the transactions.
            </summary>        
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Models.RemoveTransactionsModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.ListAccountsModel">
            <summary>
            A class containing the necessary parameters for a list accounts request.  
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.ListAccountsModel.WalletName">
            <summary>
            The name of the wallet for which to list the accounts.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.GetUnusedAddressModel">
            <summary>
            A class containing the necessary parameters for an unused address request.  
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetUnusedAddressModel.WalletName">
            <summary>
            The name of the wallet from which to get the address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetUnusedAddressModel.AccountName">
            <summary>
            The name of the account for which to get the address.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.GetUnusedAddressesModel">
            <summary>
            A class containing the necessary parameters for an unused addresses request.  
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetUnusedAddressesModel.WalletName">
            <summary>
            The name of the wallet from which to get the addresses.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetUnusedAddressesModel.AccountName">
            <summary>
            The name of the account for which to get the addresses.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetUnusedAddressesModel.Count">
            <summary>
            The number of addresses to retrieve.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.GetAllAddressesModel">
            <summary>
            A class containing the necessary parameters for a retrieve all addresses request.  
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetAllAddressesModel.WalletName">
            <summary>
            The name of the wallet from which to get the addresses.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetAllAddressesModel.AccountName">
            <summary>
            The name of the account for which to get the addresses.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.GetExtPubKeyModel">
            <summary>
            A class containing the necessary parameters for an extended public key request.  
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetExtPubKeyModel.WalletName">
            <summary>
            The name of the wallet from which to get the extended public key.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Stratis.Bitcoin.Features.Wallet.Models.GetExtPubKeyModel.AccountName" -->
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.GetUnusedAccountModel">
            <summary>
            A class containing the necessary parameters for a new account request.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetUnusedAccountModel.WalletName">
            <summary>
            The name of the wallet in which to create the account.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.GetUnusedAccountModel.Password">
            <summary>
            The password for the wallet.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.WalletSyncFromDateRequest">
            <summary>
            A class containing the necessary parameters for a wallet resynchronization request.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletSyncFromDateRequest.Date">
            <summary>
            The date and time from which to resync the wallet.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.WalletStatsRequest">
            <summary>
            A class containing the necessary parameters for a wallet stats request.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletStatsRequest.WalletName">
            <summary>
            The name of the wallet for which to get the stats.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Stratis.Bitcoin.Features.Wallet.Models.WalletStatsRequest.AccountName" -->
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletStatsRequest.MinConfirmations">
            <summary>
            The minimum number of confirmations a transaction needs to have to be included.
            To include unconfirmed transactions, set this value to 0.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletStatsRequest.Verbose">
            <summary>
            Should the request return a more detailed output
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.AddressBookEntryRequest">
            <summary>
            A class containing the necessary parameters to perform an add address book entry request.
            </summary>
            <seealso cref="T:Stratis.Bitcoin.Features.Wallet.Models.RequestModel" />
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.AddressBookEntryRequest.Label">
            <summary>
            A label to attach to the address book entry.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.AddressBookEntryRequest.Address">
            <summary>
            The address to enter in the address book.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.SpendableTransactionsRequest">
            <summary>
            A class containing the necessary parameters to perform a spendable transactions request.
            </summary>
            <seealso cref="T:Stratis.Bitcoin.Features.Wallet.Models.RequestModel" />
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.SpendableTransactionsRequest.WalletName">
            <summary>
            The name of the wallet to retrieve the spendable transactions for.
            </summary> 
        </member>
        <!-- Badly formed XML comment ignored for member "P:Stratis.Bitcoin.Features.Wallet.Models.SpendableTransactionsRequest.AccountName" -->
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.SpendableTransactionsRequest.MinConfirmations">
            <summary>
            The minimum number of confirmations a transaction needs to have to be included.
            To include unconfirmed transactions, set this value to 0.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.SplitCoinsRequest.TotalAmountToSplit">
            <summary>The amount that will be sent.</summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.SignMessageRequest">
            <summary>
            Object to sign a message.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.VerifyRequest">
            <summary>
            Object to verify a signed message.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.SpendableTransactionModel.Id">
            <summary>
            Transaction id.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.SpendableTransactionModel.Index">
            <summary>
            The index of the output in the transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.SpendableTransactionModel.Address">
            <summary>
            The Base58 representation of this address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.SpendableTransactionModel.IsChange">
            <summary>
            A value indicating whether this address is a change address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.SpendableTransactionModel.Amount">
            <summary>
            The transaction amount.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.SpendableTransactionModel.CreationTime">
            <summary>
            Gets or sets the creation time.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.SpendableTransactionModel.Confirmations">
            <summary>
            The number of confirmations.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.UnspentCoinModel">
            <summary>
            Model for Json response for listunspent RPC call.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.UnspentCoinModel.Id">
            <summary>
            Transaction id.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.UnspentCoinModel.Index">
            <summary>
            The index of the output in the transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.UnspentCoinModel.Address">
            <summary>
            The Base58 representation of this address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.UnspentCoinModel.Account">
            <summary>
            Account name.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.UnspentCoinModel.ScriptPubKeyHex">
            <summary>
            The output script paid, encoded as hex.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.UnspentCoinModel.RedeemScriptHex">
            <summary>
            If the output is a P2SH whose script belongs to this wallet, this is the redeem script.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.UnspentCoinModel.Amount">
            <summary>
            The transaction amount.
            Serialized in coins (BTC).
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.UnspentCoinModel.Confirmations">
            <summary>
            The number of confirmations.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.UnspentCoinModel.IsSpendable">
            <summary>
            Whether the private key or keys needed to spend this output are part of the wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.UnspentCoinModel.IsSolvable">
            <summary>
            Whether the wallet knows how to spend this output.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletGeneralInfoModel.CreationTime">
            <summary>
            The time this wallet was created.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletGeneralInfoModel.LastBlockSyncedHeight">
            <summary>
            The height of the last block that was synced.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletGeneralInfoModel.ChainTip">
            <summary>
            The total number of blocks.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletGeneralInfoModel.IsChainSynced">
            <summary>
            Whether the chain is synced with the network.
            Only when this is true, can the client calculate a download percentage based on <see cref="P:Stratis.Bitcoin.Features.Wallet.Models.WalletGeneralInfoModel.ChainTip"/> and <see cref="P:Stratis.Bitcoin.Features.Wallet.Models.WalletGeneralInfoModel.LastBlockSyncedHeight"/>.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletGeneralInfoModel.ConnectedNodes">
            <summary>
            The total number of nodes that we're connected to.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TransactionItemModel.ToAddress">
            <summary>
            The Base58 representation of this address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TransactionItemModel.Payments">
            <summary>
            A list of payments made out in this transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TransactionItemModel.ConfirmedInBlock">
            <summary>
            The height of the block in which this transaction was confirmed.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TransactionItemModel.BlockIndex">
            <summary>
            The index of this transaction in the block in which it is contained.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.PaymentDetailModel.DestinationAddress">
            <summary>
            The Base58 representation of the destination  address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.PaymentDetailModel.Amount">
            <summary>
            The transaction amount.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.WalletSendTransactionModel">
            <summary>
            A model class to be returned when the user sends a transaction successfully.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletSendTransactionModel.TransactionId">
            <summary>
            The transaction id.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.WalletSendTransactionModel.Outputs">
            <summary>
            The list of outputs in this transaction.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.TransactionOutputModel">
            <summary>
            A simple transaction output.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TransactionOutputModel.Address">
            <summary>
            The output address in Base58.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TransactionOutputModel.Amount">
            <summary>
            The amount associated with the output.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Models.TransactionOutputModel.OpReturnData">
            <summary>
            The data encoded in the OP_RETURN script
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Models.WalletStatsModel">
            <summary>
            Class containing details of a wallet stats model.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Recipient">
            <summary>
            Represents recipients of a payment, used in <see cref="M:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.BuildTransaction(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext)"/>.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Recipient.ScriptPubKey">
            <summary>
            The destination script.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Recipient.Amount">
            <summary>
            The amount that will be sent.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Recipient.SubtractFeeFromAmount">
            <summary>
            An indicator if the fee is subtracted from the current recipient.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Validations.IsBitcoinAddressAttribute.Required">
            <summary>
            Determines whether this field is optionally validated. If set to false, the address will be only be validated if it is not null.
            Defaults to true.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.Wallet">
            <summary>
            A wallet.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Wallet.AccountNamePattern">
            <summary>Default pattern for accounts in the wallet. The first account will be called 'account 0', then 'account 1' and so on.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Wallet.SpecialPurposeAccountIndexesStart">
            <summary>Account numbers greater or equal to this number are reserved for special purpose account indexes.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.Wallet.NormalAccounts">
            <summary>Filter for identifying normal wallet accounts.</summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.#ctor">
            <summary>
            Initializes a new instance of the wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Wallet.Name">
            <summary>
            The name of this wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Wallet.IsExtPubKeyWallet">
            <summary>
            Flag indicating if it is a watch only wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Wallet.EncryptedSeed">
            <summary>
            The seed for this wallet, password encrypted.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Wallet.ChainCode">
            <summary>
            The chain code.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Wallet.BlockLocator">
            <summary>
            Gets or sets the merkle path.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Wallet.Network">
            <summary>
            The network this wallet is for.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Wallet.CreationTime">
            <summary>
            The time this wallet was created.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.Wallet.AccountsRoot">
            <summary>
            The root of the accounts tree.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.GetAccounts(System.Func{Stratis.Bitcoin.Features.Wallet.HdAccount,System.Boolean})">
            <summary>
            Gets the accounts in the wallet.
            </summary>
            <param name="accountFilter">An optional filter for filtering the accounts being returned.</param>
            <returns>The accounts in the wallet.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.GetAccount(System.String)">
            <summary>
            Gets an account from the wallet's accounts.
            </summary>
            <param name="accountName">The name of the account to retrieve.</param>
            <returns>The requested account or <c>null</c> if the account does not exist.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.SetLastBlockDetails(NBitcoin.ChainedHeader)">
            <summary>
            Update the last block synced height and hash in the wallet.
            </summary>
            <param name="block">The block whose details are used to update the wallet.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.GetAllTransactions">
            <summary>
            Gets all the transactions in the wallet.
            </summary>
            <returns>A list of all the transactions in the wallet.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.GetAllPubKeys">
            <summary>
            Gets all the pub keys contained in this wallet.
            </summary>
            <returns>A list of all the public keys contained in the wallet.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.GetAllAddresses(System.Func{Stratis.Bitcoin.Features.Wallet.HdAccount,System.Boolean})">
            <summary>
            Gets all the addresses contained in this wallet.
            </summary>
            <param name="accountFilter">An optional filter for filtering the accounts being returned.</param>
            <returns>A list of all the addresses contained in this wallet.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.AddNewAccount(System.String,System.DateTimeOffset,System.Nullable{System.Int32},System.String)">
            <summary>
            Adds an account to the current wallet.
            </summary>
            <remarks>
            The name given to the account is of the form "account (i)" by default, where (i) is an incremental index starting at 0.
            According to BIP44, an account at index (i) can only be created when the account at index (i - 1) contains at least one transaction.
            </remarks>
            <seealso cref="!:https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki"/>
            <param name="password">The password used to decrypt the wallet's <see cref="P:Stratis.Bitcoin.Features.Wallet.Wallet.EncryptedSeed"/>.</param>
            <param name="accountCreationTime">Creation time of the account to be created.</param>
            <param name="accountIndex">The index at which an account will be created. If left null, a new account will be created after the last used one.</param>
            <param name="accountName">The name of the account to be created. If left null, an account will be created according to the <see cref="F:Stratis.Bitcoin.Features.Wallet.Wallet.AccountNamePattern"/>.</param>
            <returns>A new HD account.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.AddNewAccount(NBitcoin.ExtPubKey,System.Int32,System.DateTimeOffset)">
            <summary>
            Adds an account to the current wallet.
            </summary>
            <remarks>
            The name given to the account is of the form "account (i)" by default, where (i) is an incremental index starting at 0.
            According to BIP44, an account at index (i) can only be created when the account at index (i - 1) contains at least one transaction.
            </remarks>
            <seealso cref="!:https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki"/>
            <param name="extPubKey">The extended public key for the wallet<see cref="P:Stratis.Bitcoin.Features.Wallet.Wallet.EncryptedSeed"/>.</param>
            <param name="accountIndex">Zero-based index of the account to add.</param>
            <param name="accountCreationTime">Creation time of the account to be created.</param>
            <returns>A new HD account.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.GetFirstUnusedAccount">
            <summary>
            Gets the first account that contains no transaction.
            </summary>
            <returns>An unused account.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.ContainsAddress(Stratis.Bitcoin.Features.Wallet.HdAddress)">
            <summary>
            Determines whether the wallet contains the specified address.
            </summary>
            <param name="address">The address to check.</param>
            <returns>A value indicating whether the wallet contains the specified address.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.GetExtendedPrivateKeyForAddress(System.String,Stratis.Bitcoin.Features.Wallet.HdAddress)">
            <summary>
            Gets the extended private key for the given address.
            </summary>
            <param name="password">The password used to encrypt/decrypt sensitive info.</param>
            <param name="address">The address to get the private key for.</param>
            <returns>The extended private key.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.GetAllSpendableTransactions(System.Int32,System.Int32,System.Func{Stratis.Bitcoin.Features.Wallet.HdAccount,System.Boolean})">
            <summary>
            Lists all spendable transactions from all accounts in the wallet.
            </summary>
            <param name="currentChainHeight">Height of the current chain, used in calculating the number of confirmations.</param>
            <param name="confirmations">The number of confirmations required to consider a transaction spendable.</param>
            <param name="accountFilter">An optional filter for filtering the accounts being returned.</param>
            <returns>A collection of spendable outputs.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.GetAllUnspentTransactions(System.Int32,System.Int32,System.Func{Stratis.Bitcoin.Features.Wallet.HdAccount,System.Boolean})">
            <summary>
            Lists all unspent transactions from all accounts in the wallet.
            This is distinct from the list of spendable transactions. A transaction can be unspent but not yet spendable due to coinbase/stake maturity, for example.
            </summary>
            <param name="currentChainHeight">Height of the current chain, used in calculating the number of confirmations.</param>
            <param name="confirmations">The number of confirmations required to consider a transaction spendable.</param>
            <param name="accountFilter">An optional filter for filtering the accounts being returned.</param>
            <returns>A collection of spendable outputs.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.GetSentTransactionFee(NBitcoin.uint256)">
            <summary>
            Calculates the fee paid by the user on a transaction sent.
            </summary>
            <param name="transactionId">The transaction id to look for.</param>
            <returns>The fee paid.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.Wallet.GetAddress(System.String,System.Func{Stratis.Bitcoin.Features.Wallet.HdAccount,System.Boolean})">
            <summary>
            Finds the HD addresses for the address.
            </summary>
            <remarks>
            Returns an HDAddress.
            </remarks>
            <param name="address">An address.</param>
            <param name="accountFilter">An optional filter for filtering the accounts being returned.</param>
            <returns>HD Address</returns>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.AccountRoot">
            <summary>
            The root for the accounts for any type of coins.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.AccountRoot.#ctor">
            <summary>
            Initializes a new instance of the object.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AccountRoot.CoinType">
            <summary>
            The type of coin, Bitcoin or Stratis.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AccountRoot.LastBlockSyncedHeight">
            <summary>
            The height of the last block that was synced.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AccountRoot.LastBlockSyncedHash">
            <summary>
            The hash of the last block that was synced.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.AccountRoot.Accounts">
            <summary>
            The accounts used in the wallet.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.AccountRoot.GetFirstUnusedAccount">
            <summary>
            Gets the first account that contains no transaction.
            </summary>
            <returns>An unused account</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.AccountRoot.GetAccountByName(System.String)">
            <summary>
            Gets the account matching the name passed as a parameter.
            </summary>
            <param name="accountName">The name of the account to get.</param>
            <returns>The HD account specified by the parameter or <c>null</c> if the account does not exist.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.AccountRoot.AddNewAccount(System.String,System.String,System.Byte[],NBitcoin.Network,System.DateTimeOffset,System.Nullable{System.Int32},System.String)">
            <summary>
            Adds an account to the current account root using encrypted seed and password.
            </summary>
            <remarks>The name given to the account is of the form "account (i)" by default, where (i) is an incremental index starting at 0.
            According to BIP44, an account at index (i) can only be created when the account at index (i - 1) contains transactions.
            <seealso cref="!:https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki"/></remarks>
            <param name="password">The password used to decrypt the wallet's encrypted seed.</param>
            <param name="encryptedSeed">The encrypted private key for this wallet.</param>
            <param name="chainCode">The chain code for this wallet.</param>
            <param name="network">The network for which this account will be created.</param>
            <param name="accountCreationTime">Creation time of the account to be created.</param>
            <param name="accountIndex">The index at which an account will be created. If left null, a new account will be created after the last used one.</param>
            <param name="accountName">The name of the account to be created. If left null, an account will be created according to the <see cref="!:AccountNamePattern"/>.</param>
            <returns>A new HD account.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.AccountRoot.CreateAccount(System.String,System.String,System.Byte[],NBitcoin.Network,System.DateTimeOffset,System.Int32,System.String)">
            <summary>
            Create an account for a specific account index and account name pattern.
            </summary>
            <param name="password">The password used to decrypt the wallet's encrypted seed.</param>
            <param name="encryptedSeed">The encrypted private key for this wallet.</param>
            <param name="chainCode">The chain code for this wallet.</param>
            <param name="network">The network for which this account will be created.</param>
            <param name="accountCreationTime">Creation time of the account to be created.</param>
            <param name="newAccountIndex">The optional account index to use.</param>
            <param name="newAccountName">The optional account name to use.</param>
            <returns>A new HD account.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.AccountRoot.AddNewAccount(NBitcoin.ExtPubKey,System.Int32,NBitcoin.Network,System.DateTimeOffset)">
            <inheritdoc cref="!:AddNewAccount(string, string, byte[], Network, DateTimeOffset)"/>
            <summary>
            Adds an account to the current account root using extended public key and account index.
            </summary>
            <param name="accountExtPubKey">The extended public key for the account.</param>
            <param name="accountIndex">The zero-based account index.</param>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.HdAccount">
            <summary>
            An HD account's details.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.HdAccount.Index">
            <summary>
            The index of the account.
            </summary>
            <remarks>
            According to BIP44, an account at index (i) can only be created when the account
            at index (i - 1) contains transactions.
            </remarks>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.HdAccount.Name">
            <summary>
            The name of this account.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.HdAccount.HdPath">
            <summary>
            A path to the account as defined in BIP44.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.HdAccount.ExtendedPubKey">
            <summary>
            An extended pub key used to generate addresses.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.HdAccount.CreationTime">
            <summary>
            Gets or sets the creation time.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.HdAccount.ExternalAddresses">
            <summary>
            The list of external addresses, typically used for receiving money.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.HdAccount.InternalAddresses">
            <summary>
            The list of internal addresses, typically used to receive change.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAccount.GetCoinType">
            <summary>
            Gets the type of coin this account is for.
            </summary>
            <returns>A <see cref="T:Stratis.Bitcoin.Features.Wallet.CoinType"/>.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAccount.GetFirstUnusedReceivingAddress">
            <summary>
            Gets the first receiving address that contains no transaction.
            </summary>
            <returns>An unused address</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAccount.GetFirstUnusedChangeAddress">
            <summary>
            Gets the first change address that contains no transaction.
            </summary>
            <returns>An unused address</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAccount.GetFirstUnusedAddress(System.Boolean)">
            <summary>
            Gets the first receiving address that contains no transaction.
            </summary>
            <returns>An unused address</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAccount.GetLastUsedAddress(System.Boolean)">
            <summary>
            Gets the last address that contains transactions.
            </summary>
            <param name="isChange">Whether the address is a change (internal) address or receiving (external) address.</param>
            <returns></returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAccount.GetTransactionsById(NBitcoin.uint256)">
            <summary>
            Gets a collection of transactions by id.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAccount.GetBalances">
            <summary>
            Get the accounts total spendable value for both confirmed and unconfirmed UTXO.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAccount.FindAddressesForTransaction(System.Func{Stratis.Bitcoin.Features.Wallet.TransactionData,System.Boolean})">
            <summary>
            Finds the addresses in which a transaction is contained.
            </summary>
            <remarks>
            Returns a collection because a transaction can be contained in a change address as well as in a receive address (as a spend).
            </remarks>
            <param name="predicate">A predicate by which to filter the transactions.</param>
            <returns></returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAccount.GetCombinedAddresses">
            <summary>
            Return both the external and internal (change) address from an account.
            </summary>
            <returns>All addresses that belong to this account.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAccount.CreateAddresses(NBitcoin.Network,System.Int32,System.Boolean)">
            <summary>
            Creates a number of additional addresses in the current account.
            </summary>
            <remarks>
            The name given to the account is of the form "account (i)" by default, where (i) is an incremental index starting at 0.
            According to BIP44, an account at index (i) can only be created when the account at index (i - 1) contains at least one transaction.
            </remarks>
            <param name="network">The network these addresses will be for.</param>
            <param name="addressesQuantity">The number of addresses to create.</param>
            <param name="isChange">Whether the addresses added are change (internal) addresses or receiving (external) addresses.</param>
            <returns>The created addresses.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAccount.GetSpendableTransactions(System.Int32,System.Int64,System.Int32)">
            <summary>
            Lists all spendable transactions in the current account.
            </summary>
            <param name="currentChainHeight">The current height of the chain. Used for calculating the number of confirmations a transaction has.</param>
            <param name="coinbaseMaturity">The coinbase maturity after which a coinstake transaction is spendable.</param>
            <param name="confirmations">The minimum number of confirmations required for transactions to be considered.</param>
            <returns>A collection of spendable outputs that belong to the given account.</returns>
            <remarks>Note that coinbase and coinstake transaction outputs also have to mature with a sufficient number of confirmations before
            they are considered spendable. This is independent of the confirmations parameter.</remarks>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.HdAddress">
            <summary>
            An HD address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.HdAddress.Index">
            <summary>
            The index of the address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.HdAddress.ScriptPubKey">
            <summary>
            The P2PKH (pay-to-pubkey-hash) script pub key for this address.
            </summary>
            <remarks>The script is of the format OP_DUP OP_HASH160 {pubkeyhash} OP_EQUALVERIFY OP_CHECKSIG</remarks>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.HdAddress.Pubkey">
            <summary>
            The P2PK (pay-to-pubkey) script pub key corresponding to the private key of this address.
            </summary>
            <remarks>This is typically only used for mining, as the valid script types for mining are constrained.
            Block explorers often depict the P2PKH address as the 'address' of a P2PK scriptPubKey, which is not
            actually correct. A P2PK scriptPubKey does not have a defined address format.
            
            The script itself is of the format: {pubkey} OP_CHECKSIG</remarks>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.HdAddress.Address">
            <summary>
            The Base58 representation of this address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.HdAddress.HdPath">
            <summary>
            A path to the address as defined in BIP44.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.HdAddress.Transactions">
            <summary>
            A list of transactions involving this address.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAddress.IsChangeAddress">
            <summary>
            Determines whether this is a change address or a receive address.
            </summary>
            <returns>
              <c>true</c> if it is a change address; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAddress.UnspentTransactions">
            <summary>
            List all spendable transactions in an address.
            </summary>
            <returns>List of spendable transactions.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.HdAddress.GetBalances">
            <summary>
            Get the address total spendable value for both confirmed and unconfirmed UTXO.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.TransactionData">
            <summary>
            An object containing transaction data.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.Id">
            <summary>
            Transaction id.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.Amount">
            <summary>
            The transaction amount.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.IsCoinBase">
            <summary>
            A value indicating whether this is a coinbase transaction or not.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.IsCoinStake">
            <summary>
            A value indicating whether this is a coinstake transaction or not.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.Index">
            <summary>
            The index of this scriptPubKey in the transaction it is contained.
            </summary>
            <remarks>
            This is effectively the index of the output, the position of the output in the parent transaction.
            </remarks>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.BlockHeight">
            <summary>
            The height of the block including this transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.BlockHash">
            <summary>
            The hash of the block including this transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.BlockIndex">
            <summary>
            The index of this transaction in the block in which it is contained.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.CreationTime">
            <summary>
            Gets or sets the creation time.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.MerkleProof">
            <summary>
            Gets or sets the Merkle proof for this transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.ScriptPubKey">
            <summary>
            The script pub key for this address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.Hex">
            <summary>
            Hexadecimal representation of this transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.IsPropagated">
            <summary>
            Propagation state of this transaction.
            </summary>
            <remarks>Assume it's <c>true</c> if the field is <c>null</c>.</remarks>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionData.SpendingDetails">
            <summary>
            The details of the transaction in which the output referenced in this transaction is spent.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.TransactionData.IsConfirmed">
            <summary>
            Determines whether this transaction is confirmed.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.TransactionData.IsSpent">
            <summary>
            Indicates whether an output has been spent.
            </summary>
            <returns>A value indicating whether an output has been spent.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.TransactionData.GetUnspentAmount(System.Boolean)">
            <summary>
            Checks if the output is not spent, with the option to choose whether only confirmed ones are considered. 
            </summary>
            <param name="confirmedOnly">A value indicating whether we only want confirmed amount.</param>
            <returns>The total amount that has not been spent.</returns>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.PaymentDetails">
            <summary>
            An object representing a payment.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.PaymentDetails.DestinationScriptPubKey">
            <summary>
            The script pub key of the destination address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.PaymentDetails.DestinationAddress">
            <summary>
            The Base58 representation of the destination address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.PaymentDetails.OutputIndex">
            <summary>
            The index of the output of the destination address.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.PaymentDetails.Amount">
            <summary>
            The transaction amount.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.SpendingDetails.TransactionId">
            <summary>
            The id of the transaction in which the output referenced in this transaction is spent.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.SpendingDetails.Payments">
            <summary>
            A list of payments made out in this transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.SpendingDetails.BlockHeight">
            <summary>
            The height of the block including this transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.SpendingDetails.BlockIndex">
            <summary>
            The index of this transaction in the block in which it is contained.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.SpendingDetails.IsCoinStake">
            <summary>
            A value indicating whether this is a coin stake transaction or not.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.SpendingDetails.CreationTime">
            <summary>
            Gets or sets the creation time.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.SpendingDetails.Hex">
            <summary>
            Hexadecimal representation of this spending transaction.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.SpendingDetails.IsSpentConfirmed">
            <summary>
            Determines whether this transaction being spent is confirmed.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.UnspentOutputReference">
            <summary>
            Represents an UTXO that keeps a reference to <see cref="T:Stratis.Bitcoin.Features.Wallet.HdAddress"/> and <see cref="T:Stratis.Bitcoin.Features.Wallet.HdAccount"/>.
            </summary>
            <remarks>
            This is useful when an UTXO needs access to its HD properties like the HD path when reconstructing a private key.
            </remarks>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.UnspentOutputReference.Account">
            <summary>
            The account associated with this UTXO
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.UnspentOutputReference.Address">
            <summary>
            The address associated with this UTXO
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.UnspentOutputReference.Transaction">
            <summary>
            The transaction representing the UTXO.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.UnspentOutputReference.Confirmations">
            <summary>
            Number of confirmations for this UTXO.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.UnspentOutputReference.ToOutPoint">
            <summary>
            Convert the <see cref="T:Stratis.Bitcoin.Features.Wallet.TransactionData"/> to an <see cref="T:NBitcoin.OutPoint"/>
            </summary>
            <returns>The corresponding <see cref="T:NBitcoin.OutPoint"/>.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletExtensions.IsDownloaded(NBitcoin.ChainIndexer)">
            <summary>
            Determines whether the chain is downloaded and up to date.
            </summary>
            <param name="chainIndexer">The chain.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletExtensions.GetHeightAtTime(NBitcoin.ChainIndexer,System.DateTime)">
            <summary>
            Gets the height of the first block created at or after this date.
            </summary>
            <param name="chainIndexer">The chain of blocks.</param>
            <param name="date">The date.</param>
            <returns>The height of the first block created after the date.</returns>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.BaseWalletFeature">
            <summary>
            Common base class for any feature replacing the <see cref="T:Stratis.Bitcoin.Features.Wallet.WalletFeature" />.
            </summary>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.WalletFeature">
            <summary>
            Wallet feature for the full node.
            </summary>
            <seealso cref="T:Stratis.Bitcoin.Builder.Feature.FullNodeFeature" />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletFeature.#ctor(Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletSyncManager,Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletManager,Stratis.Bitcoin.Features.Wallet.Interfaces.IAddressBookManager,Stratis.Bitcoin.Signals.ISignals,Stratis.Bitcoin.Connection.IConnectionManager,Stratis.Bitcoin.Features.Wallet.Broadcasting.BroadcasterBehavior,Stratis.Bitcoin.Utilities.INodeStats)">
            <summary>
            Initializes a new instance of the <see cref="T:Stratis.Bitcoin.Features.Wallet.WalletFeature"/> class.
            </summary>
            <param name="walletSyncManager">The synchronization manager for the wallet, tasked with keeping the wallet synced with the network.</param>
            <param name="walletManager">The wallet manager.</param>
            <param name="addressBookManager">The address book manager.</param>
            <param name="signals">The signals responsible for receiving blocks and transactions from the network.</param>
            <param name="connectionManager">The connection manager.</param>
            <param name="broadcasterBehavior">The broadcaster behavior.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletFeature.PrintHelp(NBitcoin.Network)">
            <summary>
            Prints command-line help.
            </summary>
            <param name="network">The network to extract values from.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletFeature.BuildDefaultConfigurationFile(System.Text.StringBuilder,NBitcoin.Network)">
            <summary>
            Get the default configuration.
            </summary>
            <param name="builder">The string builder to add the settings to.</param>
            <param name="network">The network to base the defaults off.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletFeature.InitializeAsync">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletFeature.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.FullNodeBuilderWalletExtension">
            <summary>
            A class providing extension methods for <see cref="T:Stratis.Bitcoin.Builder.IFullNodeBuilder"/>.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletFeePolicy.maxTxFee">
            <summary>Maximum transaction fee.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletFeePolicy.minTxFee">
            <summary>
             Fees smaller than this (in satoshi) are considered zero fee (for transaction creation)
             Override with -mintxfee
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletFeePolicy.fallbackFee">
            <summary>
             If fee estimation does not have enough data to provide estimates, use this fee instead.
             Has no effect if not using fee estimation
             Override with -fallbackfee
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletFeePolicy.payTxFee">
            <summary>
            Transaction fee set by the user
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletFeePolicy.minRelayTxFee">
            <summary>
            Min Relay Tx Fee
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletFeePolicy.#ctor(Stratis.Bitcoin.Configuration.NodeSettings)">
            <summary>
            Constructs a wallet fee policy.
            </summary>
            <param name="nodeSettings">Settings for the the node.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletFeePolicy.Start">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletFeePolicy.Stop">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletFeePolicy.GetRequiredFee(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletFeePolicy.GetMinimumFee(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletFeePolicy.GetMinimumFee(System.Int32,System.Int32,NBitcoin.Money)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletFeePolicy.GetFeeRate(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.WalletManager">
            <summary>
            A manager providing operations on wallets.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.DefaultAccount">
            <summary>Used to get the first account.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.WalletRecoveryAccountsCount">
            <summary>Quantity of accounts created in a wallet file when a wallet is restored.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.WalletCreationAccountsCount">
            <summary>Quantity of accounts created in a wallet file when a wallet is created.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.WalletFileExtension">
            <summary>File extension for wallet files.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.WalletSavetimeIntervalInMinutes">
            <summary>Timer for saving wallet files to the file system.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.lockObject">
            <summary>
            A lock object that protects access to the <see cref="T:Stratis.Bitcoin.Features.Wallet.Wallet"/>.
            Any of the collections inside Wallet must be synchronized using this lock.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.asyncLoop">
            <summary>The async loop we need to wait upon before we can shut down this manager.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.asyncProvider">
            <summary>Factory for creating background async loop tasks.</summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.WalletManager.Wallets">
            <summary>Gets the list of wallets.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.coinType">
            <summary>The type of coin used in this manager.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.network">
            <summary>Specification of the network the node runs on - regtest/testnet/mainnet.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.ChainIndexer">
            <summary>The chain of headers.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.nodeLifetime">
            <summary>Global application life cycle control - triggers when application shuts down.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.logger">
            <summary>Instance logger.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.fileStorage">
            <summary>An object capable of storing <see cref="T:Stratis.Bitcoin.Features.Wallet.Wallet"/>s to the file system.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.broadcasterManager">
            <summary>The broadcast manager.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.dateTimeProvider">
            <summary>Provider of time functions.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.walletSettings">
            <summary>The settings for the wallet feature.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.scriptAddressReader">
            <summary>The settings for the wallet feature.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletManager.privateKeyCache">
            <summary>The private key cache for unlocked wallets.</summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.CreateAddressFromScriptLookup">
            <summary>
            Creates the <see cref="T:Stratis.Bitcoin.Features.Wallet.ScriptToAddressLookup"/> object to use.
            </summary>
            <remarks>
            Override this method and the <see cref="T:Stratis.Bitcoin.Features.Wallet.ScriptToAddressLookup"/> object to provide a custom keys lookup.
            </remarks>
            <returns>A new <see cref="T:Stratis.Bitcoin.Features.Wallet.ScriptToAddressLookup"/> object for use by this class.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetValidStakingTemplates">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.Stop">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.CreateWallet(System.String,System.String,System.String,NBitcoin.Mnemonic)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.SignMessage(System.String,System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.VerifySignedMessage(System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.LoadWallet(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.UnlockWallet(System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.LockWallet(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.RecoverWallet(System.String,System.String,System.String,System.DateTime,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.RecoverWallet(System.String,NBitcoin.ExtPubKey,System.Int32,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetUnusedAccount(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetUnusedAccount(Stratis.Bitcoin.Features.Wallet.Wallet,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetUnusedAddress(Stratis.Bitcoin.Features.Wallet.WalletAccountReference)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetUnusedChangeAddress(Stratis.Bitcoin.Features.Wallet.WalletAccountReference)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetUnusedAddresses(Stratis.Bitcoin.Features.Wallet.WalletAccountReference,System.Int32,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetWalletsFiles">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetHistory(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetHistory(Stratis.Bitcoin.Features.Wallet.HdAccount)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetBalances(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetAddressBalance(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetWallet(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetAccounts(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.LastBlockHeight">
            <inheritdoc />
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.WalletManager.ContainsWallets">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.LastReceivedBlockInfo">
            <summary>
            Gets the hash of the last block received by the wallets.
            </summary>
            <returns>Hash of the last block received by the wallets.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetSpendableTransactionsInWallet(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetUnspentTransactionsInWallet(System.String,System.Int32,System.Func{Stratis.Bitcoin.Features.Wallet.HdAccount,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetSpendableTransactionsInAccount(Stratis.Bitcoin.Features.Wallet.WalletAccountReference,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.RemoveBlocks(NBitcoin.ChainedHeader)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.ProcessBlock(NBitcoin.Block,NBitcoin.ChainedHeader)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.ProcessTransaction(NBitcoin.Transaction,System.Nullable{System.Int32},NBitcoin.Block,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.AddTransactionToWallet(NBitcoin.Transaction,NBitcoin.TxOut,System.Nullable{System.Int32},NBitcoin.Block,System.Boolean)">
            <summary>
            Adds a transaction that credits the wallet with new coins.
            This method is can be called many times for the same transaction (idempotent).
            </summary>
            <param name="transaction">The transaction from which details are added.</param>
            <param name="utxo">The unspent output to add to the wallet.</param>
            <param name="blockHeight">Height of the block.</param>
            <param name="block">The block containing the transaction to add.</param>
            <param name="isPropagated">Propagation state of the transaction.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.AddSpendingTransactionToWallet(NBitcoin.Transaction,System.Collections.Generic.IEnumerable{NBitcoin.TxOut},NBitcoin.uint256,System.Nullable{System.Int32},System.Nullable{System.Int32},NBitcoin.Block)">
            <summary>
            Mark an output as spent, the credit of the output will not be used to calculate the balance.
            The output will remain in the wallet for history (and reorg).
            </summary>
            <param name="transaction">The transaction from which details are added.</param>
            <param name="paidToOutputs">A list of payments made out</param>
            <param name="spendingTransactionId">The id of the transaction containing the output being spent, if this is a spending transaction.</param>
            <param name="spendingTransactionIndex">The index of the output in the transaction being referenced, if this is a spending transaction.</param>
            <param name="blockHeight">Height of the block.</param>
            <param name="block">The block containing the transaction to add.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.DeleteWallet">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.SaveWallets">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.SaveWallet(Stratis.Bitcoin.Features.Wallet.Wallet)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetWalletFileExtension">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.UpdateLastBlockSyncedHeight(NBitcoin.ChainedHeader)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.UpdateLastBlockSyncedHeight(Stratis.Bitcoin.Features.Wallet.Wallet,NBitcoin.ChainedHeader)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GenerateWalletFile(System.String,System.String,System.Byte[],System.Nullable{System.DateTimeOffset})">
            <summary>
            Generates the wallet file.
            </summary>
            <param name="name">The name of the wallet.</param>
            <param name="encryptedSeed">The seed for this wallet, password encrypted.</param>
            <param name="chainCode">The chain code.</param>
            <param name="creationTime">The time this wallet was created.</param>
            <returns>The wallet object that was saved into the file system.</returns>
            <exception cref="T:Stratis.Bitcoin.Features.Wallet.WalletException">Thrown if wallet cannot be created.</exception>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GenerateExtPubKeyOnlyWalletFile(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Generates the wallet file without private key and chain code.
            For use with only the extended public key.
            </summary>
            <param name="name">The name of the wallet.</param>
            <param name="creationTime">The time this wallet was created.</param>
            <returns>The wallet object that was saved into the file system.</returns>
            <exception cref="T:Stratis.Bitcoin.Features.Wallet.WalletException">Thrown if wallet cannot be created.</exception>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.Load(Stratis.Bitcoin.Features.Wallet.Wallet)">
            <summary>
            Loads the wallet to be used by the manager if a wallet with this name has not already been loaded.
            </summary>
            <param name="wallet">The wallet to load.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.LoadKeysLookupLock">
            <summary>
            Loads the keys and transactions we're tracking in memory for faster lookups.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.UpdateKeysLookupLocked(System.Collections.Generic.IEnumerable{Stratis.Bitcoin.Features.Wallet.HdAddress})">
            <summary>
            Update the keys and transactions we're tracking in memory for faster lookups.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.AddInputKeysLookupLocked(Stratis.Bitcoin.Features.Wallet.TransactionData)">
            <summary>
            Add to the list of unspent outputs kept in memory for faster lookups.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.RemoveInputKeysLookupLock(Stratis.Bitcoin.Features.Wallet.TransactionData)">
            <summary>
            Remove from the list of unspent outputs kept in memory.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.RefreshInputKeysLookupLock">
            <summary>
            Reloads the UTXOs we're tracking in memory for faster lookups.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.AddTxLookupLocked(Stratis.Bitcoin.Features.Wallet.TransactionData,NBitcoin.Transaction)">
            <summary>
            Add to the mapping of transactions kept in memory for faster lookups.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetWalletsNames">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetWalletByName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetFirstWalletBlockLocator">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetEarliestWalletHeight">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetOldestWalletCreationTime">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.RemoveTransactionsByIds(System.Collections.Generic.IEnumerable{NBitcoin.uint256})">
            <summary>
            Search all wallets and removes the specified transactions from the wallet and persist it.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.RemoveTransactionsByIds(System.String,System.Collections.Generic.IEnumerable{NBitcoin.uint256})">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.RemoveAllTransactions(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.RemoveTransactionsFromDate(System.String,System.DateTimeOffset)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.UpdateWhenChainDownloaded(System.Collections.Generic.IEnumerable{Stratis.Bitcoin.Features.Wallet.Wallet},System.DateTime)">
            <summary>
            Updates details of the last block synced in a wallet when the chain of headers finishes downloading.
            </summary>
            <param name="wallets">The wallets to update when the chain has downloaded.</param>
            <param name="date">The creation date of the block with which to update the wallet.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletManager.GetExtKey(Stratis.Bitcoin.Features.Wallet.WalletAccountReference,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletRPCController.blockStore">
            <summary>Provides access to the block store database.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletRPCController.broadcasterManager">
            <summary>Wallet broadcast manager.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletRPCController.logger">
            <summary>Instance logger.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletRPCController.scriptAddressReader">
            <summary>A reader for extracting an address from a <see cref="T:NBitcoin.Script"/>.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletRPCController.storeSettings">
            <summary>Node related configuration.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletRPCController.walletManager">
            <summary>Wallet manager.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletRPCController.walletTransactionHandler">
            <summary>Wallet transaction handler.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletRPCController.walletSettings">
            <summary>Wallet related configuration.</summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletRPCController.SendTransactionAsync(System.String)">
            <summary>
            Broadcasts a raw transaction from hex to local node and network.
            </summary>
            <param name="hex">Raw transaction in hex.</param>
            <returns>The transaction hash.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletRPCController.GetNewAddress(System.String,System.String)">
            <summary>
            RPC method that gets a new address for receiving payments.
            Uses the first wallet and account.
            </summary>
            <param name="account">Parameter is deprecated.</param>
            <param name="addressType">Address type, currently only 'legacy' is supported.</param>
            <returns>The new address.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletRPCController.GetBalance(System.String,System.Int32)">
             <summary>
             RPC method that returns the total available balance.
             The available balance is what the wallet considers currently spendable.
            
             Uses the first wallet and account.
             </summary>
             <param name="accountName">Remains for backward compatibility. Must be excluded or set to "*" or "". Deprecated in latest bitcoin core (0.17.0).</param>
             <param name="minConfirmations">Only include transactions confirmed at least this many times. (default=0)</param>
             <returns>Total spendable balance of the wallet.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletRPCController.GetTransaction(System.String)">
            <summary>
            RPC method to return transaction info from the wallet. Will only work fully if 'txindex' is set.
            Uses the default wallet if specified, or the first wallet found.
            </summary>
            <param name="txid">Identifier of the transaction to find.</param>
            <returns>Transaction information.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Stratis.Bitcoin.Features.Wallet.WalletRPCController.GetAddressGroupings(System.String)" -->
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletRPCController.IsChange(System.Collections.Generic.IEnumerable{Stratis.Bitcoin.Features.Wallet.HdAddress},NBitcoin.Script)">
            <summary>
            This will check the wallet's list of <see cref="!:HdAccount.InternalAddress"/>es to see if this address is
            an address that received change.
            </summary>
            <param name="internalAddresses">The wallet's set of internal addresses.</param>
            <param name="txOutScriptPubkey">The base58 address to verify from the <see cref="T:NBitcoin.TxOut"/>.</param>
            <returns><c>true</c> if the <paramref name="txOutScriptPubkey"/> is a change address.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletRPCController.IsTxInMine(System.Collections.Generic.IEnumerable{Stratis.Bitcoin.Features.Wallet.HdAddress},System.Collections.Generic.Dictionary{NBitcoin.uint256,Stratis.Bitcoin.Features.Wallet.TransactionData},NBitcoin.TxIn)">
            <summary>
            Determines whether or not the input's address exists in the wallet's set of addresses.
            </summary>
            <param name="addresses">The wallet's external and internal addresses.</param>
            <param name="txDictionary">The set of transactions to check against.</param>
            <param name="txIn">The input to check.</param>
            <returns><c>true</c>if the input's address exist in the wallet.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletRPCController.IsAddressMine(System.Collections.Generic.IEnumerable{Stratis.Bitcoin.Features.Wallet.HdAddress},NBitcoin.Script)">
            <summary>
            Determines whether the script translates to an address that exists in the given wallet.
            </summary>
            <param name="addresses">All the addresses from the wallet.</param>
            <param name="scriptPubKey">The script to check.</param>
            <returns><c>true</c> if the <paramref name="scriptPubKey"/> is an address in the given wallet.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletRPCController.GetWalletAccountReference">
            <summary>
            Gets the first account from the "default" wallet if it specified, otherwise returns the first available account in the existing wallets.
            </summary>
            <returns>Reference to the default wallet account, or the first available if no default wallet is specified.</returns>
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.WalletSettings">
            <summary>
            Configuration related to the wallet.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletSettings.logger">
            <summary>Instance logger.</summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.WalletSettings.SaveTransactionHex">
            <summary>
            A value indicating whether the transactions hex representations should be saved in the wallet file.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.WalletSettings.UnlockDefaultWallet">
            <summary>
            A value indicating whether to unlock the supplied default wallet on startup.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.WalletSettings.DefaultWalletName">
            <summary>
            Name for the default wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.WalletSettings.DefaultWalletPassword">
            <summary>
            Password for the default wallet if overriding the default.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.WalletSettings.IsLightWallet">
            <summary>
            A value indicating whether the wallet being run is the light wallet or the full wallet.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.WalletSettings.UnusedAddressesBuffer">
            <summary>Size of the buffer of unused addresses maintained in an account.</summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletSettings.#ctor(Stratis.Bitcoin.Configuration.NodeSettings)">
            <summary>
            Initializes an instance of the object from the node configuration.
            </summary>
            <param name="nodeSettings">The node configuration.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletSettings.IsDefaultWalletEnabled">
            <summary>
            Check if the default wallet is specified.
            </summary>
            <returns>Returns true if the <see cref="P:Stratis.Bitcoin.Features.Wallet.WalletSettings.DefaultWalletName"/> is other than empty string.</returns>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletSettings.PrintHelp(NBitcoin.Network)">
            <summary>
            Displays wallet configuration help information on the console.
            </summary>
            <param name="network">Not used.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletSettings.BuildDefaultConfigurationFile(System.Text.StringBuilder,NBitcoin.Network)">
            <summary>
            Get the default configuration.
            </summary>
            <param name="builder">The string builder to add the settings to.</param>
            <param name="network">The network to base the defaults off.</param>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.logger">
            <summary>Instance logger.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.blocksQueue">
            <summary>Queue which contains blocks that should be processed by <see cref="T:Stratis.Bitcoin.Features.Wallet.WalletManager"/>.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.blocksQueueSize">
            <summary>Current <see cref="F:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.blocksQueue"/> size in bytes.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.maxQueueSizeReached">
            <summary>Flag to determine when the <see cref="F:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.MaxQueueSize"/> is reached.</summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.MaxQueueSize">
            <summary>Limit <see cref="F:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.blocksQueue"/> size to 100MB.</summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.Start">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.Stop">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.OnProcessBlockAsync(NBitcoin.Block,System.Threading.CancellationToken)">
            <summary>Called when a <see cref="T:NBitcoin.Block"/> is added to the <see cref="F:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.blocksQueue"/>.
            Depending on the <see cref="P:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.WalletTip"/> and incoming block height, this method will decide whether the <see cref="T:NBitcoin.Block"/> will be processed by the <see cref="T:Stratis.Bitcoin.Features.Wallet.WalletManager"/>.
            </summary>
            <param name="block">Block to be processed.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.ProcessBlock(NBitcoin.Block)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.ProcessTransaction(NBitcoin.Transaction)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.SyncFromDate(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.SyncFromHeight(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletSyncManager.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler">
            <summary>
            A handler that has various functionalities related to transaction operations.
            </summary>
            <seealso cref="T:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletTransactionHandler" />
            <remarks>
            This will uses the <see cref="T:Stratis.Bitcoin.Features.Wallet.Interfaces.IWalletFeePolicy" /> and the <see cref="T:NBitcoin.TransactionBuilder" />.
            TODO: Move also the broadcast transaction to this class
            TODO: Implement lockUnspents
            TODO: Implement subtractFeeFromOutputs
            </remarks>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.PretendMaxFee">
            <summary>
            We will assume that we're never going to have a fee over 1 STRAT.
            </summary>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.BuildTransaction(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.FundTransaction(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext,NBitcoin.Transaction)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.GetMaximumSpendableAmount(Stratis.Bitcoin.Features.Wallet.WalletAccountReference,Stratis.Bitcoin.Features.Wallet.FeeType,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.EstimateFee(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext)">
            <inheritdoc />
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.InitializeTransactionBuilder(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext)">
            <summary>
            Initializes the context transaction builder from information in <see cref="T:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext"/>.
            </summary>
            <param name="context">Transaction build context.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.AddSecrets(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext,System.Collections.Generic.IEnumerable{NBitcoin.ICoin})">
            <summary>
            Loads all the private keys for each of the <see cref="T:Stratis.Bitcoin.Features.Wallet.HdAddress"/> in <see cref="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.UnspentOutputs"/>
            </summary>
            <param name="context">The context associated with the current transaction being built.</param>
            <param name="coinsSpent">The coins spent to generate the transaction.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.FindChangeAddress(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext)">
            <summary>
            Find the next available change address.
            </summary>
            <param name="context">The context associated with the current transaction being built.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.AddCoins(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext)">
            <summary>
            Find all available outputs (UTXO's) that belong to <see cref="P:Stratis.Bitcoin.Features.Wallet.WalletAccountReference.AccountName"/>.
            Then add them to the <see cref="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.UnspentOutputs"/>.
            </summary>
            <param name="context">The context associated with the current transaction being built.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.AddRecipients(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext)">
            <summary>
            Add recipients to the <see cref="T:NBitcoin.TransactionBuilder"/>.
            </summary>
            <param name="context">The context associated with the current transaction being built.</param>
            <remarks>
            Add outputs to the <see cref="T:NBitcoin.TransactionBuilder"/> based on the <see cref="T:Stratis.Bitcoin.Features.Wallet.Recipient"/> list.
            </remarks>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.AddFee(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext)">
            <summary>
            Use the <see cref="T:NBitcoin.FeeRate"/> from the <see cref="F:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.walletFeePolicy"/>.
            </summary>
            <param name="context">The context associated with the current transaction being built.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.WalletTransactionHandler.AddOpReturnOutput(Stratis.Bitcoin.Features.Wallet.TransactionBuildContext)">
            <summary>
            Add extra unspendable output to the transaction if there is anything in OpReturnData.
            </summary>
            <param name="context">The context associated with the current transaction being built.</param>
        </member>
        <member name="M:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.#ctor(NBitcoin.Network)">
            <summary>
            Initialize a new instance of a <see cref="T:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext"/>
            </summary>
            <param name="network">The network for which this transaction will be built.</param>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.AccountReference">
            <summary>
            The wallet account to use for building a transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.Recipients">
            <summary>
            The recipients to send Bitcoin to.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.FeeType">
            <summary>
            An indicator to estimate how much fee to spend on a transaction.
            </summary>
            <remarks>
            The higher the fee the faster a transaction will get in to a block.
            </remarks>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.MinConfirmations">
            <summary>
            The minimum number of confirmations an output must have to be included as an input.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.UnspentOutputs">
            <summary>
            Coins that are available to be spent.
            </summary>
        </member>
        <member name="F:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.TransactionBuilder">
            <summary>
            The builder used to build the current transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.ChangeAddress">
            <summary>
            The change address, where any remaining funds will be sent to.
            </summary>
            <remarks>
            A Bitcoin has to spend the entire UTXO, if total value is greater then the send target
            the rest of the coins go in to a change address that is under the senders control.
            </remarks>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.TransactionFee">
            <summary>
            The total fee on the transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.WalletPassword">
            <summary>
            The password that protects the wallet in <see cref="T:Stratis.Bitcoin.Features.Wallet.WalletAccountReference"/>.
            </summary>
            <remarks>
            TODO: replace this with System.Security.SecureString (https://github.com/dotnet/corefx/tree/master/src/System.Security.SecureString)
            More info (https://github.com/dotnet/corefx/issues/1387)
            </remarks>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.SelectedInputs">
            <summary>
            The inputs that must be used when building the transaction.
            </summary>
            <remarks>
            The inputs are required to be part of the wallet.
            </remarks>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.AllowOtherInputs">
            <summary>
            If false, allows unselected inputs, but requires all selected inputs be used.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.OverrideFeeRate">
            <summary>
            Allows the context to specify a <see cref="T:NBitcoin.FeeRate"/> when building a transaction.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.Shuffle">
            <summary>
            Shuffles transaction inputs and outputs for increased privacy.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.OpReturnData">
            <summary>
            Optional data to be added as an extra OP_RETURN transaction output.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.OpReturnAmount">
            <summary>
            Optional amount to add to the OP_RETURN transaction output.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.Sign">
            <summary>
            Whether the transaction should be signed or not.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.CacheSecret">
            <summary>
            Whether the secret should be cached for 5 mins after it is used or not.
            </summary>
        </member>
        <member name="P:Stratis.Bitcoin.Features.Wallet.TransactionBuildContext.Time">
            <summary>
            The timestamp to set on the transaction.
            </summary>
        </member>
    </members>
</doc>
